<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.6//EN" "/System/Library/DTDs/HeaderDoc-1.6.dtd">
<header id="//xsdoc_ref/doc/header/GitHubUpdater.h" lang="c" filename="GitHubUpdater.h" headerpath="/Users/macmade/Documents/Macmade/GitHub/GitHubUpdates/Documentation/../GitHubUpdates/GitHubUpdater.h"><name>GitHubUpdater.h</name>
<includes>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/Foundation.h">&lt;Foundation/Foundation.h&gt;</hd_link></include>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/GitHubUpdaterDelegate.h">&lt;GitHubUpdates/GitHubUpdaterDelegate.h&gt;</hd_link></include>
</includes>
<desc><p/></desc>
<classes><class id="//xsdoc_ref/occ/cl/GitHubUpdater" lang="occ"><name>GitHubUpdater</name>
<abstract><p>GitHub updater class.
</p></abstract>
<attributes><attribute><name>Superclass</name><value><hd_link logicalPath="//xsdoc_ref/occ/cl/NSObject">NSObject</hd_link></value></attribute>
</attributes>
<declaration>@<declaration_type>interface</declaration_type> <declaration_type>GitHubUpdater</declaration_type>: <declaration_type>NSObject</declaration_type>  <declaration_comment>/*!
@property    user
@abstract    Your GitHub user name.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>atomic</declaration_param>,
        <declaration_param>readwrite</declaration_param>,
        <declaration_param>strong</declaration_param> ) <declaration_type>IBInspectable</declaration_type> <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type><declaration_var>user</declaration_var>;   <declaration_comment>/*!
@property    repository
@abstract    Your GitHub repository.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>atomic</declaration_param>,
        <declaration_param>readwrite</declaration_param>,
        <declaration_param>strong</declaration_param> ) <declaration_type>IBInspectable</declaration_type> <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type><declaration_var>repository</declaration_var>;   <declaration_comment>/*!
@property    delegate
@abstract    The delegate object, if you need behaviour customization.
@see         GitHubUpdaterDelegate</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>atomic</declaration_param>,
        <declaration_param>readwrite</declaration_param>,
        <declaration_param>weak</declaration_param> ) <declaration_type>id</declaration_type>&lt; <declaration_template>GitHubUpdaterDelegate</declaration_template> &gt; <declaration_var>delegate</declaration_var>;   <declaration_comment>/*!
@property    checkingForUpdates
@abstract    Whether the updater is currently checking for updates.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>atomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>BOOL</declaration_type> <declaration_var>checkingForUpdates</declaration_var>;   <declaration_comment>/*!
@property    installingUpdate
@abstract    Whether the updater is currently installing an update.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>atomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>BOOL</declaration_type> <declaration_var>installingUpdate</declaration_var>;   <declaration_comment>/*!
* @method      checkForUpdates:
* @abstract    Checks for updates.
" @discussion  This method will display a progress window while checking for
*              updates.
*              If an update is found, it will present the user with a window
*              proposing to install the new update.
* @param       sender  An optional sender. Not used.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>IBAction</declaration_param> )<declaration_type>checkForUpdates</declaration_type>: ( <declaration_type>nullable</declaration_type> <declaration_param>id</declaration_param> )<declaration_var>sender</declaration_var>;   <declaration_comment>/*!
* @method      checkForUpdatesInBackground
* @abstract    Checks for updates in background.
" @discussion  This method won't display any UI.
*              If an update is found, it will present the user with a window
*              proposing to install the new update.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>void</declaration_param> )<declaration_var>checkForUpdatesInBackground</declaration_var>;   @@end </declaration>
<desc><p>This is the class you'll need to create in order to check for
GitHub updates.
Note that this class can be instanciated using InterfaceBuilder
as well.
</p></desc>
<methods><method id="//xsdoc_ref/occ/instm/GitHubUpdater/checkForUpdates:" lang="occ" type="instm"><name>checkForUpdates:</name>
<abstract><p>Checks for updates.
" </p></abstract>
<parameterlist>
<parameter><name>sender</name><desc><p>An optional sender. Not used.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( nullable id )</type><name>sender</name></parsedparameter>
</parsedparameterlist>
<returntype> IBAction </returntype>
<declaration>- ( <declaration_type>IBAction</declaration_type> )<declaration_function>checkForUpdates</declaration_function>: ( <declaration_type>nullable</declaration_type> <declaration_type>id</declaration_type> )<declaration_var>sender</declaration_var>; </declaration>
<desc><p>* </p></desc>
</method><method id="//xsdoc_ref/occ/instm/GitHubUpdater/checkForUpdatesInBackground" lang="occ" type="instm"><name>checkForUpdatesInBackground</name>
<abstract><p>Checks for updates in background.
" </p></abstract>
<returntype> void </returntype>
<declaration>- ( <declaration_type>void</declaration_type> )<declaration_var>checkForUpdatesInBackground</declaration_var>; </declaration>
<desc><p>* </p></desc>
</method></methods>
<properties><property id="//xsdoc_ref/occ/instp/GitHubUpdater/checkingForUpdates" lang="occ"><name>checkingForUpdates</name>
<abstract><p>Whether the updater is currently checking for updates.
</p></abstract>
<returntype>BOOL</returntype>
<declaration>@property( <declaration_param>atomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>BOOL</declaration_type> <declaration_var>checkingForUpdates</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/GitHubUpdater/delegate" lang="occ"><name>delegate</name>
<abstract><p>The delegate object, if you need behaviour customization.
</p></abstract>
<attributelists><listattribute><name>See</name><list>
<item><name>GitHubUpdaterDelegate</name><value><hd_link logicalPath="GitHubUpdaterDelegate" isseealso="yes">GitHubUpdaterDelegate</hd_link></value></item></list></listattribute>
</attributelists>
<returntype>id&lt; GitHubUpdaterDelegate  &gt;</returntype>
<declaration>@property( <declaration_param>atomic</declaration_param>,
    <declaration_param>readwrite</declaration_param>,
    <declaration_param>weak</declaration_param> ) <declaration_type>id</declaration_type>&lt; <declaration_template>GitHubUpdaterDelegate</declaration_template> &gt; <declaration_var>delegate</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/GitHubUpdater/installingUpdate" lang="occ"><name>installingUpdate</name>
<abstract><p>Whether the updater is currently installing an update.
</p></abstract>
<returntype>BOOL</returntype>
<declaration>@property( <declaration_param>atomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>BOOL</declaration_type> <declaration_var>installingUpdate</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/GitHubUpdater/repository" lang="occ"><name>repository</name>
<abstract><p>Your GitHub repository.
</p></abstract>
<returntype>IBInspectable NSString *</returntype>
<declaration>@property( <declaration_param>atomic</declaration_param>,
    <declaration_param>readwrite</declaration_param>,
    <declaration_param>strong</declaration_param> ) <declaration_type>IBInspectable</declaration_type> <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>repository</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/GitHubUpdater/user" lang="occ"><name>user</name>
<abstract><p>Your GitHub user name.
</p></abstract>
<returntype>IBInspectable NSString *</returntype>
<declaration>@property( <declaration_param>atomic</declaration_param>,
    <declaration_param>readwrite</declaration_param>,
    <declaration_param>strong</declaration_param> ) <declaration_type>IBInspectable</declaration_type> <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>user</declaration_var>; </declaration>
<desc><p/></desc>
</property></properties>
<timestamp>Sunday, June 18, 2017</timestamp>
</class></classes>
<copyrightinfo>&#169; (c) 2017, Jean-David Gadina - www.xs-labs.com
</copyrightinfo>
<timestamp>Sunday, June 18, 2017</timestamp>
</header>