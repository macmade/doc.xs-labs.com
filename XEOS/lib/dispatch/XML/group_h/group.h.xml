<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.6//EN" "/System/Library/DTDs/HeaderDoc-1.6.dtd">
<header id="//xsdoc_ref/doc/header/group.h" lang="c" filename="group.h" headerpath="/Users/macmade/Documents/Macmade/Development/GitHub/XEOS/source/lib/dispatch/include/dispatch/group.h"><name>group.h</name>
<includes>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/dispatch_group_t.h">&lt;dispatch/types/dispatch_group_t.h&gt;</hd_link></include>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/dispatch_queue_t.h">&lt;dispatch/types/dispatch_queue_t.h&gt;</hd_link></include>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/dispatch_block_t.h">&lt;dispatch/types/dispatch_block_t.h&gt;</hd_link></include>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/dispatch_function_t.h">&lt;dispatch/types/dispatch_function_t.h&gt;</hd_link></include>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/dispatch_time_t.h">&lt;dispatch/types/dispatch_time_t.h&gt;</hd_link></include>
</includes>
<desc><p/></desc>
<functions><function id="//xsdoc_ref/c/func/dispatch_group_async" lang="c"><name>dispatch_group_async</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_group_t</type><name>group</name></parsedparameter>
<parsedparameter><type>dispatch_queue_t</type><name>queue</name></parsedparameter>
<parsedparameter><type>dispatch_block_t</type><name>block</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration> <declaration_type>void</declaration_type> <declaration_function>dispatch_group_async</declaration_function>(
    <declaration_type>dispatch_group_t</declaration_type> <declaration_param>group</declaration_param>,
    <declaration_type>dispatch_queue_t</declaration_type> <declaration_param>queue</declaration_param>,
    <declaration_type>dispatch_block_t</declaration_type> <declaration_param>block</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_group_async_f" lang="c"><name>dispatch_group_async_f</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_group_t</type><name>group</name></parsedparameter>
<parsedparameter><type>dispatch_queue_t</type><name>queue</name></parsedparameter>
<parsedparameter><type>void *</type><name>context</name></parsedparameter>
<parsedparameter><type>dispatch_function_t</type><name>work</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>dispatch_group_async_f</declaration_function>(
    <declaration_type>dispatch_group_t</declaration_type> <declaration_param>group</declaration_param>,
    <declaration_type>dispatch_queue_t</declaration_type> <declaration_param>queue</declaration_param>,
    <declaration_type>void</declaration_type> <declaration_type>*</declaration_type><declaration_param>context</declaration_param>,
    <declaration_type>dispatch_function_t</declaration_type> <declaration_param>work</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_group_create" lang="c"><name>dispatch_group_create</name>
<returntype> dispatch_group_t</returntype>
<declaration><declaration_type>dispatch_group_t</declaration_type> <declaration_function>dispatch_group_create</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_group_enter" lang="c"><name>dispatch_group_enter</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_group_t</type><name>group</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>dispatch_group_enter</declaration_function>(
    <declaration_type>dispatch_group_t</declaration_type> <declaration_param>group</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_group_leave" lang="c"><name>dispatch_group_leave</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_group_t</type><name>group</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>dispatch_group_leave</declaration_function>(
    <declaration_type>dispatch_group_t</declaration_type> <declaration_param>group</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_group_notify" lang="c"><name>dispatch_group_notify</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_group_t</type><name>group</name></parsedparameter>
<parsedparameter><type>dispatch_queue_t</type><name>queue</name></parsedparameter>
<parsedparameter><type>dispatch_block_t</type><name>block</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>dispatch_group_notify</declaration_function>(
    <declaration_type>dispatch_group_t</declaration_type> <declaration_param>group</declaration_param>,
    <declaration_type>dispatch_queue_t</declaration_type> <declaration_param>queue</declaration_param>,
    <declaration_type>dispatch_block_t</declaration_type> <declaration_param>block</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_group_notify_f" lang="c"><name>dispatch_group_notify_f</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_group_t</type><name>group</name></parsedparameter>
<parsedparameter><type>dispatch_queue_t</type><name>queue</name></parsedparameter>
<parsedparameter><type>void *</type><name>context</name></parsedparameter>
<parsedparameter><type>dispatch_function_t</type><name>work</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>dispatch_group_notify_f</declaration_function>(
    <declaration_type>dispatch_group_t</declaration_type> <declaration_param>group</declaration_param>,
    <declaration_type>dispatch_queue_t</declaration_type> <declaration_param>queue</declaration_param>,
    <declaration_type>void</declaration_type> <declaration_type>*</declaration_type><declaration_param>context</declaration_param>,
    <declaration_type>dispatch_function_t</declaration_type> <declaration_param>work</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_group_wait" lang="c"><name>dispatch_group_wait</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_group_t</type><name>group</name></parsedparameter>
<parsedparameter><type>dispatch_time_t</type><name>timeout</name></parsedparameter>
</parsedparameterlist>
<returntype> long</returntype>
<declaration><declaration_type>long</declaration_type> <declaration_function>dispatch_group_wait</declaration_function>(
    <declaration_type>dispatch_group_t</declaration_type> <declaration_param>group</declaration_param>,
    <declaration_type>dispatch_time_t</declaration_type> <declaration_param>timeout</declaration_param> );  </declaration>
<desc><p/></desc>
</function></functions>
<defines><pdefine id="//xsdoc_ref/c/macro/__XEOS_LIB_DISPATCH_GROUP_H__" definetype="value" lang="c"><name>__XEOS_LIB_DISPATCH_GROUP_H__</name>
<declaration><declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>__XEOS_LIB_DISPATCH_GROUP_H__</declaration_preprocessor> </declaration>
</pdefine></defines><timestamp>Wednesday, June 25, 2014</timestamp>
</header>