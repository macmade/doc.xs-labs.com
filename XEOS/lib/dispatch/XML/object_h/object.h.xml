<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.6//EN" "/System/Library/DTDs/HeaderDoc-1.6.dtd">
<header id="//xsdoc_ref/doc/header/object.h" lang="c" filename="object.h" headerpath="/Users/macmade/Documents/Macmade/Development/GitHub/XEOS/source/lib/dispatch/include/dispatch/object.h"><name>object.h</name>
<includes>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/dispatch_object_t.h">&lt;dispatch/types/dispatch_object_t.h&gt;</hd_link></include>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/dispatch_function_t.h">&lt;dispatch/types/dispatch_function_t.h&gt;</hd_link></include>
</includes>
<desc><p/></desc>
<functions><function id="//xsdoc_ref/c/func/dispatch_debug" lang="c"><name>dispatch_debug</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_object_t</type><name>object</name></parsedparameter>
<parsedparameter><type>const char *</type><name>message</name></parsedparameter>
<parsedparameter><type> ...</type><name>...</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration> <declaration_type>void</declaration_type> <declaration_function>dispatch_debug</declaration_function>(
    <declaration_type>dispatch_object_t</declaration_type> <declaration_param>object</declaration_param>,
    <declaration_keyword>const</declaration_keyword> <declaration_type>char</declaration_type> <declaration_type>*</declaration_type><declaration_param>message</declaration_param>,
    ... );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_get_context" lang="c"><name>dispatch_get_context</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_object_t</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> void *</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_type>*</declaration_type> <declaration_function>dispatch_get_context</declaration_function>(
    <declaration_type>dispatch_object_t</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_release" lang="c"><name>dispatch_release</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_object_t</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>dispatch_release</declaration_function>(
    <declaration_type>dispatch_object_t</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_resume" lang="c"><name>dispatch_resume</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_object_t</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>dispatch_resume</declaration_function>(
    <declaration_type>dispatch_object_t</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_retain" lang="c"><name>dispatch_retain</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_object_t</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>dispatch_retain</declaration_function>(
    <declaration_type>dispatch_object_t</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_set_context" lang="c"><name>dispatch_set_context</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_object_t</type><name>object</name></parsedparameter>
<parsedparameter><type>void *</type><name>context</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>dispatch_set_context</declaration_function>(
    <declaration_type>dispatch_object_t</declaration_type> <declaration_param>object</declaration_param>,
    <declaration_type>void</declaration_type> <declaration_type>*</declaration_type><declaration_param>context</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_set_finalizer_f" lang="c"><name>dispatch_set_finalizer_f</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_object_t</type><name>object</name></parsedparameter>
<parsedparameter><type>dispatch_function_t</type><name>finalizer</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>dispatch_set_finalizer_f</declaration_function>(
    <declaration_type>dispatch_object_t</declaration_type> <declaration_param>object</declaration_param>,
    <declaration_type>dispatch_function_t</declaration_type> <declaration_param>finalizer</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/dispatch_suspend" lang="c"><name>dispatch_suspend</name>
<parsedparameterlist>
<parsedparameter><type>dispatch_object_t</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>dispatch_suspend</declaration_function>(
    <declaration_type>dispatch_object_t</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function></functions>
<defines><pdefine id="//xsdoc_ref/c/macro/__XEOS_LIB_DISPATCH_OBJECT_H__" definetype="value" lang="c"><name>__XEOS_LIB_DISPATCH_OBJECT_H__</name>
<declaration><declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>__XEOS_LIB_DISPATCH_OBJECT_H__</declaration_preprocessor> </declaration>
</pdefine></defines><timestamp>Wednesday, June 25, 2014</timestamp>
</header>