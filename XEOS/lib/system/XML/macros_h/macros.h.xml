<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.6//EN" "/System/Library/DTDs/HeaderDoc-1.6.dtd">
<header id="//xsdoc_ref/doc/header/macros.h" lang="c" filename="macros.h" headerpath="/Users/macmade/Documents/Macmade/Development/GitHub/XEOS/source/lib/system/include/system/macros.h"><name>macros.h</name>
<includes>
</includes>
<desc><p/></desc>
<defines><pdefine id="//xsdoc_ref/c/macro/__XEOS_LIB_SYSTEM_MACROS_H__" definetype="value" lang="c"><name>__XEOS_LIB_SYSTEM_MACROS_H__</name>
<declaration><declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>__XEOS_LIB_SYSTEM_MACROS_H__</declaration_preprocessor> </declaration>
</pdefine><pdefine id="//xsdoc_ref/c/macro/CONST_ATTRIBUTE" definetype="block" lang="c"><name>CONST_ATTRIBUTE</name>
<abstract><p>Standardization of the const compiler attribute
</p></abstract>
<declaration><declaration_preprocessor>#if</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>4</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>==</declaration_preprocessor> <declaration_preprocessor>3</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC_MINOR__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>1</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__clang__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>CONST_ATTRIBUTE</declaration_preprocessor> <declaration_preprocessor>__attribute__</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>const</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#else</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>CONST_ATTRIBUTE</declaration_preprocessor> 
<declaration_preprocessor>#endif</declaration_preprocessor>  
</declaration>
<desc><p>Not all compiler support this attribute, so it may be defined
to nothing.
</p></desc>
</pdefine><pdefine id="//xsdoc_ref/c/macro/DEPRECATED_ATTRIBUTE" definetype="block" lang="c"><name>DEPRECATED_ATTRIBUTE</name>
<abstract><p>Standardization of the deprecated compiler attribute
</p></abstract>
<declaration><declaration_preprocessor>#if</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>4</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>==</declaration_preprocessor> <declaration_preprocessor>3</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC_MINOR__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>1</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__clang__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>DEPRECATED_ATTRIBUTE</declaration_preprocessor> <declaration_preprocessor>__attribute__</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>deprecated</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#else</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>DEPRECATED_ATTRIBUTE</declaration_preprocessor> 
<declaration_preprocessor>#endif</declaration_preprocessor>  
</declaration>
<desc><p>Not all compiler support this attribute, so it may be defined
to nothing.
</p></desc>
</pdefine><pdefine id="//xsdoc_ref/c/macro/FORMAT_ATTRIBUTE" definetype="block" lang="c"><name>FORMAT_ATTRIBUTE</name>
<abstract><p>Standardization of the format compiler attribute
</p></abstract>
<declaration><declaration_preprocessor>#if</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>4</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>==</declaration_preprocessor> <declaration_preprocessor>3</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC_MINOR__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>1</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__clang__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>FORMAT_ATTRIBUTE</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>f</declaration_preprocessor><declaration_preprocessor>,</declaration_preprocessor> <declaration_preprocessor>s</declaration_preprocessor><declaration_preprocessor>,</declaration_preprocessor> <declaration_preprocessor>v</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>__attribute__</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>format</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>f</declaration_preprocessor><declaration_preprocessor>,</declaration_preprocessor> <declaration_preprocessor>s</declaration_preprocessor><declaration_preprocessor>,</declaration_preprocessor> <declaration_preprocessor>v</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#else</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>FORMAT_ATTRIBUTE</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>f</declaration_preprocessor><declaration_preprocessor>,</declaration_preprocessor> <declaration_preprocessor>s</declaration_preprocessor><declaration_preprocessor>,</declaration_preprocessor> <declaration_preprocessor>v</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#endif</declaration_preprocessor>  
</declaration>
<desc><p>Not all compiler support this attribute, so it may be defined
to nothing.
</p></desc>
</pdefine><pdefine id="//xsdoc_ref/c/macro/LIKELY" definetype="function" lang="c"><name>LIKELY</name>
<parsedparameterlist>
<parsedparameter><type></type><name>_x_</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>LIKELY</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>_x_</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>__builtin_expect</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>!</declaration_preprocessor><declaration_preprocessor>!</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>_x_</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor><declaration_preprocessor>,</declaration_preprocessor> <declaration_preprocessor>1</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> </declaration>
</pdefine><pdefine id="//xsdoc_ref/c/macro/LIKELY_DONTLINK_1" definetype="function" lang="c"><name>LIKELY</name>
<parsedparameterlist>
<parsedparameter><type></type><name>_x_</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>LIKELY</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>_x_</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>!</declaration_preprocessor><declaration_preprocessor>!</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>_x_</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> </declaration>
</pdefine><pdefine id="//xsdoc_ref/c/macro/NORETURN_ATTRIBUTE" definetype="block" lang="c"><name>NORETURN_ATTRIBUTE</name>
<abstract><p>Standardization of the noreturn compiler attribute
</p></abstract>
<declaration><declaration_preprocessor>#if</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>4</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>==</declaration_preprocessor> <declaration_preprocessor>3</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC_MINOR__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>1</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__clang__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>NORETURN_ATTRIBUTE</declaration_preprocessor> <declaration_preprocessor>__attribute__</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>noreturn</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#else</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>NORETURN_ATTRIBUTE</declaration_preprocessor> 
<declaration_preprocessor>#endif</declaration_preprocessor>  
</declaration>
<desc><p>Not all compiler support this attribute, so it may be defined
to nothing.
</p></desc>
</pdefine><pdefine id="//xsdoc_ref/c/macro/UNAVAILABLE_ATTRIBUTE" definetype="block" lang="c"><name>UNAVAILABLE_ATTRIBUTE</name>
<abstract><p>Standardization of the unavailable compiler attribute
</p></abstract>
<declaration><declaration_preprocessor>#if</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>4</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>==</declaration_preprocessor> <declaration_preprocessor>3</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC_MINOR__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>1</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__clang__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>UNAVAILABLE_ATTRIBUTE</declaration_preprocessor> <declaration_preprocessor>__attribute__</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>unavailable</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#else</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>UNAVAILABLE_ATTRIBUTE</declaration_preprocessor> 
<declaration_preprocessor>#endif</declaration_preprocessor>  
</declaration>
<desc><p>Not all compiler support this attribute, so it may be defined
to nothing.
</p></desc>
</pdefine><pdefine id="//xsdoc_ref/c/macro/UNLIKELY" definetype="function" lang="c"><name>UNLIKELY</name>
<parsedparameterlist>
<parsedparameter><type></type><name>_x_</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>UNLIKELY</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>_x_</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>__builtin_expect</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>!</declaration_preprocessor><declaration_preprocessor>!</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>_x_</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor><declaration_preprocessor>,</declaration_preprocessor> <declaration_preprocessor>0</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> </declaration>
</pdefine><pdefine id="//xsdoc_ref/c/macro/UNLIKELY_DONTLINK_1" definetype="function" lang="c"><name>UNLIKELY</name>
<parsedparameterlist>
<parsedparameter><type></type><name>_x_</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>UNLIKELY</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>_x_</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>!</declaration_preprocessor><declaration_preprocessor>!</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>_x_</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> </declaration>
</pdefine><pdefine id="//xsdoc_ref/c/macro/WEAK_ATTRIBUTE" definetype="block" lang="c"><name>WEAK_ATTRIBUTE</name>
<abstract><p>Standardization of the weak compiler attribute
</p></abstract>
<declaration><declaration_preprocessor>#if</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>4</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>==</declaration_preprocessor> <declaration_preprocessor>3</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC_MINOR__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>1</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__clang__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>WEAK_ATTRIBUTE</declaration_preprocessor> <declaration_preprocessor>__attribute__</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>weak</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#else</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>WEAK_ATTRIBUTE</declaration_preprocessor> 
<declaration_preprocessor>#endif</declaration_preprocessor>  
</declaration>
<desc><p>Not all compiler support this attribute, so it may be defined
to nothing.
</p></desc>
</pdefine><pdefine id="//xsdoc_ref/c/macro/WEAK_IMPORT_ATTRIBUTE" definetype="block" lang="c"><name>WEAK_IMPORT_ATTRIBUTE</name>
<abstract><p>Standardization of the weak import compiler attribute
</p></abstract>
<declaration><declaration_preprocessor>#if</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>4</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC__</declaration_preprocessor> <declaration_preprocessor>==</declaration_preprocessor> <declaration_preprocessor>3</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>&amp;</declaration_preprocessor><declaration_preprocessor>&amp;</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__GNUC_MINOR__</declaration_preprocessor> <declaration_preprocessor>&gt;=</declaration_preprocessor> <declaration_preprocessor>1</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>|</declaration_preprocessor><declaration_preprocessor>|</declaration_preprocessor> <declaration_preprocessor>defined</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>__clang__</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>WEAK_IMPORT_ATTRIBUTE</declaration_preprocessor> <declaration_preprocessor>__attribute__</declaration_preprocessor><declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>(</declaration_preprocessor> <declaration_preprocessor>weak_import</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> <declaration_preprocessor>)</declaration_preprocessor> 
<declaration_preprocessor>#else</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>WEAK_IMPORT_ATTRIBUTE</declaration_preprocessor> 
<declaration_preprocessor>#endif</declaration_preprocessor>  
</declaration>
<desc><p>Not all compiler support this attribute, so it may be defined
to nothing.
</p></desc>
</pdefine></defines><timestamp>Wednesday, June 25, 2014</timestamp>
</header>