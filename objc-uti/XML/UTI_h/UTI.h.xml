<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.6//EN" "/System/Library/DTDs/HeaderDoc-1.6.dtd">
<header id="//xsdoc_ref/doc/header/UTI.h" lang="c" filename="UTI.h" headerpath="/Users/macmade/Documents/Macmade/GitHub/objc-uti/Documentation/../UTI/Source/UTI.h"><name>UTI.h</name>
<abstract><p>Objective-C wrapper class for Uniform Type Identifiers (UTIs)
</p></abstract>
<includes>
</includes>
<desc><p/></desc>
<typedefs><typedef id="//xsdoc_ref/c/tdef/UTIDeclarationDictionaryKey" lang="c" type="simple"><name>UTIDeclarationDictionaryKey</name>
<abstract><p>The known keys for values found in a UTI dictionary.
</p></abstract>
<constantlist>
<constant><name>UTIDeclarationDictionaryKeyExportedType</name><desc><p>An array of exported UTI declarations.</p></desc></constant>
<constant><name>UTIDeclarationDictionaryKeyImportedType</name><desc><p>An array of imported UTI declarations.</p></desc></constant>
<constant><name>UTIDeclarationDictionaryKeyIdentifier</name><desc><p>The uniform type identifier for the declared type. This key is required.</p></desc></constant>
<constant><name>UTIDeclarationDictionaryKeyTagSpecification</name><desc><p>A dictionary containing conversions of the uniform type identifier to equivalent tags in other classification schemes.</p></desc></constant>
<constant><name>UTIDeclarationDictionaryKeyConformsTo</name><desc><p>The UTIs to which this identifier conforms.</p></desc></constant>
<constant><name>UTIDeclarationDictionaryKeyDescription</name><desc><p>A user-visible description of this type (may be localized).</p></desc></constant>
<constant><name>UTIDeclarationDictionaryKeyIconFile</name><desc><p>The name of the bundle icon resource to associate with this UTI.</p></desc></constant>
<constant><name>UTIDeclarationDictionaryKeyReferenceURL</name><desc><p>The URL of a reference document describing this type.</p></desc></constant>
<constant><name>UTIDeclarationDictionaryKeyVersion</name><desc><p>A version string.</p></desc></constant>
</constantlist>
<parsedparameterlist>
<parsedparameter><type></type><name>UTIDeclarationDictionaryKeyExportedType</name></parsedparameter>
<parsedparameter><type></type><name>UTIDeclarationDictionaryKeyImportedType</name></parsedparameter>
<parsedparameter><type></type><name>UTIDeclarationDictionaryKeyIdentifier</name></parsedparameter>
<parsedparameter><type></type><name>UTIDeclarationDictionaryKeyTagSpecification</name></parsedparameter>
<parsedparameter><type></type><name>UTIDeclarationDictionaryKeyConformsTo</name></parsedparameter>
<parsedparameter><type></type><name>UTIDeclarationDictionaryKeyDescription</name></parsedparameter>
<parsedparameter><type></type><name>UTIDeclarationDictionaryKeyIconFile</name></parsedparameter>
<parsedparameter><type></type><name>UTIDeclarationDictionaryKeyReferenceURL</name></parsedparameter>
<parsedparameter><type></type><name>UTIDeclarationDictionaryKeyVersion</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_keyword>enum</declaration_keyword> { 
    <declaration_var>UTIDeclarationDictionaryKeyExportedType</declaration_var> = <declaration_number>0x00</declaration_number>,
    <declaration_comment>/*! An array of exported UTI declarations. */</declaration_comment>
    <declaration_var>UTIDeclarationDictionaryKeyImportedType</declaration_var> = <declaration_number>0x01</declaration_number>,
    <declaration_comment>/*! An array of imported UTI declarations. */</declaration_comment>
    <declaration_var>UTIDeclarationDictionaryKeyIdentifier</declaration_var> = <declaration_number>0x02</declaration_number>,
    <declaration_comment>/*! The uniform type identifier for the declared type. This key is required. </declaration_comment>
        <declaration_comment>*/</declaration_comment>
    <declaration_var>UTIDeclarationDictionaryKeyTagSpecification</declaration_var> = <declaration_number>0x03</declaration_number>,
    <declaration_comment>/*! A dictionary containing conversions of the uniform type identifier to equivalent tags in other classification schemes. </declaration_comment>
        <declaration_comment>*/</declaration_comment>
    <declaration_var>UTIDeclarationDictionaryKeyConformsTo</declaration_var> = <declaration_number>0x04</declaration_number>,
    <declaration_comment>/*! The UTIs to which this identifier conforms. */</declaration_comment>
    <declaration_var>UTIDeclarationDictionaryKeyDescription</declaration_var> = <declaration_number>0x05</declaration_number>,
    <declaration_comment>/*! A user-visible description of this type (may be localized). </declaration_comment>
        <declaration_comment>*/</declaration_comment>
    <declaration_var>UTIDeclarationDictionaryKeyIconFile</declaration_var> = <declaration_number>0x06</declaration_number>,
    <declaration_comment>/*! The name of the bundle icon resource to associate with this UTI. </declaration_comment>
        <declaration_comment>*/</declaration_comment>
    <declaration_var>UTIDeclarationDictionaryKeyReferenceURL</declaration_var> = <declaration_number>0x07</declaration_number>,
    <declaration_comment>/*! The URL of a reference document describing this type. */</declaration_comment>
    <declaration_var>UTIDeclarationDictionaryKeyVersion</declaration_var> = <declaration_number>0x08</declaration_number> <declaration_comment>/*! A version string. </declaration_comment>
        <declaration_comment>*/</declaration_comment>
} <declaration_var>UTIDeclarationDictionaryKey</declaration_var>;  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/UTITagClass" lang="c" type="simple"><name>UTITagClass</name>
<abstract><p>The tagging classification schemes that a uniform type identifier can be converted to and from.
</p></abstract>
<constantlist>
<constant><name>UTITagClassFilenameExtension</name><desc><p>Indicates that the tag is a filename extension.</p></desc></constant>
<constant><name>UTITagClassMIMEType</name><desc><p>Indicates that the tag is a MIME type.</p></desc></constant>
<constant><name>UTITagClassNSPboardType</name><desc><p>Indicates that the tag is an NSPasteBoard type.</p></desc></constant>
<constant><name>UTITagClassOSType</name><desc><p>Indicates that the tag is an OSType.</p></desc></constant>
</constantlist>
<parsedparameterlist>
<parsedparameter><type></type><name>UTITagClassFilenameExtension</name></parsedparameter>
<parsedparameter><type></type><name>UTITagClassMIMEType</name></parsedparameter>
<parsedparameter><type></type><name>UTITagClassNSPboardType</name></parsedparameter>
<parsedparameter><type></type><name>UTITagClassOSType</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_keyword>enum</declaration_keyword> { 
    <declaration_var>UTITagClassFilenameExtension</declaration_var> = <declaration_number>0x00</declaration_number>,
    <declaration_comment>/*! Indicates that the tag is a filename extension. */</declaration_comment>
    <declaration_var>UTITagClassMIMEType</declaration_var> = <declaration_number>0x01</declaration_number>,
    <declaration_comment>/*! Indicates that the tag is a MIME type. */</declaration_comment>
    <declaration_var>UTITagClassNSPboardType</declaration_var> = <declaration_number>0x02</declaration_number>,
    <declaration_comment>/*! Indicates that the tag is an NSPasteBoard type. */</declaration_comment>
    <declaration_var>UTITagClassOSType</declaration_var> = <declaration_number>0x03</declaration_number> <declaration_comment>/*! Indicates that the tag is an OSType. </declaration_comment>
        <declaration_comment>*/</declaration_comment>
} <declaration_var>UTITagClass</declaration_var>;  </declaration>
<desc><p>The 'UTITagClassNSPboardType' and 'UTITagClassOSType' values
are only available for OS X targets. Using them on iOS
platforms will always return a nil value.
</p></desc>
</typedef></typedefs><defines><pdefine id="//xsdoc_ref/c/macro/NS_DESIGNATED_INITIALIZER" definetype="block" lang="c"><name>NS_DESIGNATED_INITIALIZER</name>
<abstract><p>Marks a designated initializer of an Objective-C class.
</p></abstract>
<declaration><declaration_preprocessor>#ifndef</declaration_preprocessor> <declaration_preprocessor>NS_DESIGNATED_INITIALIZER</declaration_preprocessor> 
<declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>NS_DESIGNATED_INITIALIZER</declaration_preprocessor> 
<declaration_preprocessor>#endif</declaration_preprocessor>  
</declaration>
<desc><p>This macro is defined if not available, in order to support
old compilers.
</p></desc>
</pdefine></defines><classes><class id="//xsdoc_ref/occ/cl/UTI" lang="occ"><name>UTI</name>
<abstract><p>Objective-C wrapper class for UTI functions
</p></abstract>
<attributes><attribute><name>Conforms to</name><value><hd_link logicalPath="//xsdoc_ref/occ/intf/NSCopying">NSCopying</hd_link></value></attribute>
<attribute><name>Superclass</name><value><hd_link logicalPath="//xsdoc_ref/occ/cl/NSObject">NSObject</hd_link></value></attribute>
</attributes>
<declaration>@<declaration_type>interface</declaration_type> <declaration_type>UTI</declaration_type>: <declaration_type>NSObject</declaration_type> &lt; <declaration_template>NSCopying</declaration_template> &gt;  <declaration_comment>/*!
@property    isDynamic
@abstract    Whether the UTI is dynamic or not</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>BOOL</declaration_type> <declaration_var>isDynamic</declaration_var>;   <declaration_comment>/*!
@property    preferredFilenameExtension
@abstract    Returns the preferred filename extension for an UTI.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type><declaration_var>preferredFilenameExtension</declaration_var>;   <declaration_comment>/*!
@property    preferredMIMEType
@abstract    Returns the preferred mime-type for an UTI.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type><declaration_var>preferredMIMEType</declaration_var>;   <declaration_comment>/*!
@property    preferredNSPboardType
@abstract    Returns the preferred NSPasteboardType for an UTI.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type><declaration_var>preferredNSPboardType</declaration_var>;   <declaration_comment>/*!
@property    preferredOSType
@abstract    Returns the preferred OSType for an UTI.
@see         OSTypeForString</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type><declaration_var>preferredOSType</declaration_var>;   <declaration_comment>/*!
@property    description
@abstract    Returns the localized, user-readable type description string associated with a uniform type identifier.
@discussion  The localized string that describes the uniform type is found in the type’s declaration.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type><declaration_var>description</declaration_var>;   <declaration_comment>/*!
@property    declaration
@abstract    Returns a uniform type’s declaration.
@discussion  A uniform type identifier is declared in a bundle’s information
property list (info.plist). This method extracts and returns
a dictionary that contains the complete declaration of the
uniform type identifier. This is useful when your application
needs to access properties that does not have a built-in
accessor method.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSDictionary</declaration_type> <declaration_type>*</declaration_type><declaration_var>declaration</declaration_var>;   <declaration_comment>/*!
@property    declaringBundleURL
@abstract    Returns the location of a bundle containing the declaration for a type.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSURL</declaration_type> <declaration_type>*</declaration_type><declaration_var>declaringBundleURL</declaration_var>;   <declaration_comment>/*!
@property    exportedTypes
@abstract    Returns an array of exported UTI declarations.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type><declaration_var>exportedTypes</declaration_var>;   <declaration_comment>/*!
@property    importedTypes
@abstract    Returns an array of imported UTI declarations.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type><declaration_var>importedTypes</declaration_var>;   <declaration_comment>/*!
@property    identifier
@abstract    Returns the uniform type identifier for the declared type.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type><declaration_var>identifier</declaration_var>;   <declaration_comment>/*!
@property    tagSpecifications
@abstract    Returns a dictionary containing conversions of the uniform type identifier to equivalent tags in other classification schemes.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSDictionary</declaration_type> <declaration_type>*</declaration_type><declaration_var>tagSpecifications</declaration_var>;   <declaration_comment>/*!
@property    conformsTo
@abstract    Returns the UTIs to which this identifier conforms.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type><declaration_var>conformsTo</declaration_var>;   <declaration_comment>/*!
@property    iconFile
@abstract    Returns the name of the bundle icon resource to associate with this UTI.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type><declaration_var>iconFile</declaration_var>;   <declaration_comment>/*!
@property    referenceURL
@abstract    Returns the URL of a reference document describing this type.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSURL</declaration_type> <declaration_type>*</declaration_type><declaration_var>referenceURL</declaration_var>;   <declaration_comment>/*!
@property    version
@abstract    Returns a version string.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    @property( <declaration_param>nonatomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type><declaration_var>version</declaration_var>;   <declaration_comment>/*!
@method      initWithString:
@abstract    Gets an UTI object with a string.
@param       str         The UTI identifier, as a string.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithString</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>str</declaration_var>;   <declaration_comment>/*!
@method      initWithString:
@abstract    Gets an UTI object with a string.
@param       str         The UTI identifier, as a string.
@param       dyn         Allows dynamic UTIs.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithString</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>str</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      initWithCFString:
@abstract    Gets an UTI object with a CoreFoundation string.
@param       str         The UTI identifier, as a CoreFoundation string.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithCFString</declaration_type>: ( <declaration_param>CFStringRef</declaration_param> )<declaration_var>str</declaration_var>;   <declaration_comment>/*!
@method      initWithCFString:
@abstract    Gets an UTI object with a CoreFoundation string.
@param       str         The UTI identifier, as a CoreFoundation string.
@param       dyn         Allows dynamic UTIs.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithCFString</declaration_type>: ( <declaration_param>CFStringRef</declaration_param> )<declaration_type>str</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      initWithFileExtension:
@abstract    Gets an UTI object with a file extension.
@param       extension   The file extension.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithFileExtension</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>extension</declaration_var>;   
    <declaration_comment>/*!
@method      initWithFileExtension:
@abstract    Gets an UTI object with a file extension.
@param       extension   The file extension.
@param       dyn         Allows dynamic UTIs.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithFileExtension</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>extension</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      initWithFileExtension:conformingTo:
@abstract    Gets an UTI object with a file extension.
@param       extension   The file extension.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithFileExtension</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>extension</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      initWithFileExtension:conformingTo:
@abstract    Gets an UTI object with a file extension.
@param       extension   The file extension.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@param       dyn         Allows dynamic UTIs.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithFileExtension</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>extension</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>uti</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      initWithMIMEType:
@abstract    Gets an UTI object with a mime-type.
@param       type        The mime-type.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithMIMEType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>;   <declaration_comment>/*!
@method      initWithMIMEType:
@abstract    Gets an UTI object with a mime-type.
@param       type        The mime-type.
@param       dyn         Allows dynamic UTIs.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithMIMEType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      initWithMIMEType:conformingTo:
@abstract    Gets an UTI object with a mime-type.
@param       type        The mime-type.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithMIMEType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      initWithMIMEType:conformingTo:
@abstract    Gets an UTI object with a mime-type.
@param       type        The mime-type.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@param       dyn         Allows dynamic UTIs.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithMIMEType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>uti</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      initWithNSPboardType
@abstract    Gets an UTI object with a NSPasteboardType.
@param       type        The NSPasteboardType.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithNSPboardType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>;   <declaration_comment>/*!
@method      initWithNSPboardType
@abstract    Gets an UTI object with a NSPasteboardType.
@param       type        The NSPasteboardType.
@param       dyn         Allows dynamic UTIs.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithNSPboardType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      initWithNSPboardType:conformingTo:
@abstract    Gets an UTI object with a NSPasteboardType.
@param       type        The NSPasteboardType.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithNSPboardType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      initWithNSPboardType:conformingTo:
@abstract    Gets an UTI object with a NSPasteboardType.
@param       type        The NSPasteboardType.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@param       dyn         Allows dynamic UTIs.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithNSPboardType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>uti</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      initWithOSType:
@abstract    Gets an UTI object with an OSType.
@param       type        The OSType.
@return      An UTI object.
@see         stringForOSType</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithOSType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>;   <declaration_comment>/*!
@method      initWithOSType:
@abstract    Gets an UTI object with an OSType.
@param       type        The OSType.
@param       dyn         Allows dynamic UTIs.
@return      An UTI object.
@see         stringForOSType</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithOSType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      initWithOSType:conformingTo:
@abstract    Gets an UTI object with an OSType.
@param       type        The OSType.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@return      An UTI object.
@see         stringForOSType</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithOSType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      initWithOSType:conformingTo:
@abstract    Gets an UTI object with an OSType.
@param       type        The OSType.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@param       dyn         Allows dynamic UTIs.
@return      An UTI object.
@see         stringForOSType</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithOSType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>uti</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      initWithTag:tagClass:conformingTo:
@abstract    Gets a uniform type identifier for the type indicated by the specified tag.
@param       tag         The tag to translate into a uniform type identifier.
@param       tagClass    The class of the tag parameter.
@param       uti         If not nil, the returned uniform type identifier must conform to this parameter.
@param       dyn         Allows dynamic UTIs.
@return      An UTI object
@discussion  This method is used to translate a type declared using another
declaration mechanism (for example, MIME types) into a uniform
type identifier. This method searches all UTI declarations for
a matching translation. If a conforming parameter is assigned,
the search is reduced to the subset of type identifiers that
conform to that type.
@see         UTITagClass</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_type>UTIWithTag</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>tag</declaration_type> <declaration_type>tagClass</declaration_type>: ( <declaration_param>UTITagClass</declaration_param> )<declaration_type>tagClass</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>uti</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      abstractTypes
@abstract    Gets the known uniform type identifiers that most other type identifiers are derived from.
@return      An array with the corresponding UTIs.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>abstractTypes</declaration_var>;   <declaration_comment>/*!
@method      concreteTypes
@abstract    Gets the known uniform type identifiers for concrete types.
@return      An array with the corresponding UTIs.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>concreteTypes</declaration_var>;   <declaration_comment>/*!
@method      textTypes
@abstract    Gets the known uniform type identifiers for text content.
@return      An array with the corresponding UTIs.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>textTypes</declaration_var>;   <declaration_comment>/*!
@method      compositeContentTypes
@abstract    Gets the known uniform type identifiers for content that includes multiple data types.
@return      An array with the corresponding UTIs.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>compositeContentTypes</declaration_var>;   <declaration_comment>/*!
@method      imageContentTypes
@abstract    Gets the known uniform type identifiers for graphics content.
@return      An array with the corresponding UTIs.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>imageContentTypes</declaration_var>;   <declaration_comment>/*!
@method      audioVisualContentTypes
@abstract    Gets the known uniform type identifier for audio and video content.
@return      An array with the corresponding UTIs.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>audioVisualContentTypes</declaration_var>;   <declaration_comment>/*!
@method      directoryTypes
@abstract    Gets the known uniform type identifiers for different directory types.
@return      An array with the corresponding UTIs.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>directoryTypes</declaration_var>;   <declaration_comment>/*!
@method      applicationTypes
@abstract    Gets the known uniform type identifiers for application types.
@return      An array with the corresponding UTIs.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>applicationTypes</declaration_var>;   <declaration_comment>/*!
@method      contactTypes
@abstract    Gets the known uniform type identifiers for contact types.
@return      An array with the corresponding UTIs.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>contactTypes</declaration_var>;   <declaration_comment>/*!
@method      miscellaneousTypes
@abstract    Gets the known uniform type identifiers for types that do not fit in other categories.
@return      An array with the corresponding UTIs.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>miscellaneousTypes</declaration_var>;   <declaration_comment>/*!
@method      itemTypeUTI
@abstract    Gets an UTI object for the 'public.item' UTI.
@return      An UTI object.
@discussion  The generic abstract type identifier for most things (files, directories).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>itemTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      contentTypeUTI
@abstract    Gets an UTI object for the 'public.content' UTI.
@return      An UTI object.
@discussion  The abstract type identifier for anything containing user-viewable document content (documents, pasteboard data, and document packages).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>contentTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      compositeContentTypeUTI
@abstract    Gets an UTI object for the 'public.composite-content' UTI.
@return      An UTI object.
@discussion  The abstract type identifier for content formats supporting mixed embedded content (i.e., compound documents).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>compositeContentTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      applicationTypeUTI
@abstract    Gets an UTI object for the 'com.apple.application' UTI.
@return      An UTI object.
@discussion  The type identifier for Mac apps.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>applicationTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      messageTypeUTI
@abstract    Gets an UTI object for the 'public.message' UTI.
@return      An UTI object.
@discussion  The abstract type identifier for messages (email, instant message, etc.).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>messageTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      contactTypeUTI
@abstract    Gets an UTI object for the 'public.contact' UTI.
@return      An UTI object.
@discussion  The abstract type identifier for contact information( for example, a person, group, or organization).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>contactTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      archiveTypeUTI
@abstract    Gets an UTI object for the 'public.archive' UTI.
@return      An UTI object.
@discussion  The abstract type identifier for an archive of files and directories.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>archiveTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      diskImageTypeUTI
@abstract    Gets an UTI object for the 'public.disk-image' UTI.
@return      An UTI object.
@discussion  The type identifier for a data item mountable as a volume.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>diskImageTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      dataTypeUTI
@abstract    Gets an UTI object for the 'public.data' UTI.
@return      An UTI object.
@discussion  The type identifier for any sort of simple byte stream, including files and in-memory data.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>dataTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      directoryTypeUTI
@abstract    Gets an UTI object for the 'public.directory' UTI.
@return      An UTI object.
@discussion  The type identifier for a file system directory, including packages and folders.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>directoryTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      resolvableTypeUTI
@abstract    Gets an UTI object for the 'com.apple.resolvable' UTI.
@return      An UTI object.
@discussion  The type identifier for symbolic links and alias files.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>resolvableTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      symLinkTypeUTI
@abstract    Gets an UTI object for the 'public.symlink' UTI.
@return      An UTI object.
@discussion  The type identifier for a symbolic link.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>symLinkTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      mountPointTypeUTI
@abstract    Gets an UTI object for the 'com.apple.mount-point' UTI.
@return      An UTI object.
@discussion  The type identifier for a root directory of a volume.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>mountPointTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      aliasFileTypeUTI
@abstract    Gets an UTI object for the 'com.apple.alias-file' UTI.
@return      An UTI object.
@discussion  The type identifier for a fully-formed alias file.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>aliasFileTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      aliasRecordTypeUTI
@abstract    Gets an UTI object for the 'com.apple.alias-record' UTI.
@return      An UTI object.
@discussion  The type identifier for raw alias data.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>aliasRecordTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      URLTypeUTI
@abstract    Gets an UTI object for the 'public.url' UTI.
@return      An UTI object.
@discussion  The type identifier for the bytes of a URL.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>URLTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      fileURLTypeUTI
@abstract    Gets an UTI object for the 'public.file-url' UTI.
@return      An UTI object.
@discussion  The type identifier for the text of a "file:" URL.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>fileURLTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      textTypeUTI
@abstract    Gets an UTI object for the 'public.text' UTI.
@return      An UTI object.
@discussion  The type identifier for all text-encoded data, including text with markup (HTML, RTF, etc.).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>textTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      plainTextTypeUTI
@abstract    Gets an UTI object for the 'public.plain-text' UTI.
@return      An UTI object.
@discussion  The type identifier for text with no markup and in an unspecified encoding.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>plainTextTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      UTF8PlainTextTypeUTI
@abstract    Gets an UTI object for the 'public.utf8-plain-text' UTI.
@return      An UTI object.
@discussion  The type identifier for plain text in a UTF-8 encoding.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>UTF8PlainTextTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      UTF16ExternalPlainTextTypeUTI
@abstract    Gets an UTI object for the 'public.utf16-external-plain-text' UTI.
@return      An UTI object.
@discussion  The type identifier for plain text in a UTF-16 encoding. If the encoded text does not include a byte order mark (BOM), the data has "external representation" byte order (big-endian).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>UTF16ExternalPlainTextTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      UTF16PlainTextTypeUTI
@abstract    Gets an UTI object for the 'public.utf16-plain-text' UTI.
@return      An UTI object.
@discussion  The type identifier for plain text in a UTF-16 encoding in native byte order. The byte order mark (BOM) is optional. Correspondes to the 'utxt' OSType.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>UTF16PlainTextTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      RTFTypeUTI
@abstract    Gets an UTI object for the 'public.rtf' UTI.
@return      An UTI object.
@discussion  The type identifier for Rich Text Format.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>RTFTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      HTMLTypeUTI
@abstract    Gets an UTI object for the 'public.html' UTI.
@return      An UTI object.
@discussion  The type identifier for HTML, any version.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>HTMLTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      XMLTypeUTI
@abstract    Gets an UTI object for the 'public.xml' UTI.
@return      An UTI object.
@discussion  The type identifier for XML data.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>XMLTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      sourceCodeTypeUTI
@abstract    Gets an UTI object for the 'public.source-code' UTI.
@return      An UTI object.
@discussion  The abstract type identifier for source code (any language).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>sourceCodeTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      CSourceTypeUTI
@abstract    Gets an UTI object for the 'public.c-source' UTI.
@return      An UTI object.
@discussion  The type identifier for C source code (.c).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>CSourceTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      objectiveCSourceTypeUTI
@abstract    Gets an UTI object for the 'public.objective-c-source' UTI.
@return      An UTI object.
@discussion  The type identifier for Objective-C source code (.m).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>objectiveCSourceTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      CPlusPlusSourceTypeUTI
@abstract    Gets an UTI object for the 'public.c-plus-plus-source' UTI.
@return      An UTI object.
@discussion  The type identifier for C++ source code (.cp, etc.).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>CPlusPlusSourceTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      objectiveCPlusPlusSourceTypeUTI
@abstract    Gets an UTI object for the 'public.objective-c-plus-plus-source' UTI.
@return      An UTI object.
@discussion  The type identifier for Objective-C++ source code.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>objectiveCPlusPlusSourceTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      CHeaderTypeUTI
@abstract    Gets an UTI object for the 'public.c-header' UTI.
@return      An UTI object.
@discussion  The type identifier for a C header.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>CHeaderTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      CPlusPlusHeaderTypeUTI
@abstract    Gets an UTI object for the 'public.c-plus-plus-header' UTI.
@return      An UTI object.
@discussion  The type identifier for a C++ header.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>CPlusPlusHeaderTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      javaSourceTypeUTI
@abstract    Gets an UTI object for the 'com.sun.java-source' UTI.
@return      An UTI object.
@discussion  The type identifier for Java source code.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>javaSourceTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      PDFTypeUTI
@abstract    Gets an UTI object for the 'com.adobe.pdf' UTI.
@return      An UTI object.
@discussion  The type identifier for Adobe PDF format.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>PDFTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      RTFDTypeUTI
@abstract    Gets an UTI object for the 'com.apple.rtfd' UTI.
@return      An UTI object.
@discussion  The type identifier for Rich Text Format Directory (RTF with content embedding, on-disk format).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>RTFDTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      flatRTFDTypeUTI
@abstract    Gets an UTI object for the 'com.apple.flat-rtfd' UTI.
@return      An UTI object.
@discussion  The type identifier for Flattened RTFD (pasteboard format).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>flatRTFDTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      TXNTextAndMultimediaDataTypeUTI
@abstract    Gets an UTI object for the 'com.apple.txn.text-multimedia-data' UTI.
@return      An UTI object.
@discussion  The type identifier for MLTE (Textension) format for mixed text and multimedia data. Corresponds to the 'txtn' OSType.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>TXNTextAndMultimediaDataTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      webArchiveTypeUTI
@abstract    Gets an UTI object for the 'com.apple.webarchive' UTI.
@return      An UTI object.
@discussion  The type identifier for the WebKit web archive format</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>webArchiveTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      imageTypeUTI
@abstract    Gets an UTI object for the 'public.image' UTI.
@return      An UTI object.
@discussion  The abstract type identifier for image data.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>imageTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      JPEGTypeUTI
@abstract    Gets an UTI object for the 'public.jpeg' UTI.
@return      An UTI object.
@discussion  The type identifier for a JPEG image.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>JPEGTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      JPEG2000TypeUTI
@abstract    Gets an UTI object for the 'public.jpeg-2000' UTI.
@return      An UTI object.
@discussion  The type identifier for a JPEG-2000 image.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>JPEG2000TypeUTI</declaration_var>;   <declaration_comment>/*!
@method      TIFFTypeUTI
@abstract    Gets an UTI object for the 'public.tiff' UTI.
@return      An UTI object.
@discussion  The type identifier for a TIFF image.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>TIFFTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      PICTTypeUTI
@abstract    Gets an UTI object for the 'com.apple.pict' UTI.
@return      An UTI object.
@discussion  The type identifier for a Quickdraw PICT.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>PICTTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      GIFTypeUTI
@abstract    Gets an UTI object for the 'com.compuserve.gif' UTI.
@return      An UTI object.
@discussion  The type identifier for a GIF image.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>GIFTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      PNGTypeUTI
@abstract    Gets an UTI object for the 'public.png' UTI.
@return      An UTI object.
@discussion  The type identifier for a PNG image.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>PNGTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      quickTimeImageTypeUTI
@abstract    Gets an UTI object for the 'com.apple.quicktime-image' UTI.
@return      An UTI object.
@discussion  The type identifier for a QuickTime image. Corresponds to the 'qtif' OSType.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>quickTimeImageTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      appleICNSTypeUTI
@abstract    Gets an UTI object for the 'com.apple.icns' UTI.
@return      An UTI object.
@discussion  The type identifier for Apple icon data.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>appleICNSTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      BMPTypeUTI
@abstract    Gets an UTI object for the 'com.microsoft.bmp' UTI.
@return      An UTI object.
@discussion  The type identifier for a Windows bitmap.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>BMPTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      ICOTypeUTI
@abstract    Gets an UTI object for the 'com.microsoft.ico' UTI.
@return      An UTI object.
@discussion  The type identifier for Windows icon data.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>ICOTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      audiovisualContentTypeUTI
@abstract    Gets an UTI object for the 'public.audiovisual-content' UTI.
@return      An UTI object.
@discussion  An abstract type identifier for audio and/or video content.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>audiovisualContentTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      movieTypeUTI
@abstract    Gets an UTI object for the 'public.movie' UTI.
@return      An UTI object.
@discussion  An abstract type identifier for a media format which may contain both video and audio. Corresponds to what users would label a "movie"</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>movieTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      videoTypeUTI
@abstract    Gets an UTI object for the 'public.video' UTI.
@return      An UTI object.
@discussion  An abstract type identifier for pure video data(no audio).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>videoTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      audioTypeUTI
@abstract    Gets an UTI object for the 'public.audio' UTI.
@return      An UTI object.
@discussion  An abstract type identifier for pure audio data (no video).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>audioTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      quickTimeMovieTypeUTI
@abstract    Gets an UTI object for the 'com.apple.quicktime-movie' UTI.
@return      An UTI object.
@discussion  The type identifier for a QuickTime movie.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>quickTimeMovieTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      MPEGTypeUTI
@abstract    Gets an UTI object for the 'public.mpeg' UTI.
@return      An UTI object.
@discussion  The type identifier for a MPEG-1 or MPEG-2 movie.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>MPEGTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      MPEG4TypeUTI
@abstract    Gets an UTI object for the 'public.mpeg-4' UTI.
@return      An UTI object.
@discussion  The type identifier for a MPEG-4 movie.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>MPEG4TypeUTI</declaration_var>;   <declaration_comment>/*!
@method      MP3TypeUTI
@abstract    Gets an UTI object for the 'public.mp3' UTI.
@return      An UTI object.
@discussion  The type identifier for MP3 audio.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>MP3TypeUTI</declaration_var>;   <declaration_comment>/*!
@method      MPEG4AudioTypeUTI
@abstract    Gets an UTI object for the 'public.mpeg-4-audio' UTI.
@return      An UTI object.
@discussion  The type identifier for a MPEG-4 audio layer (.m4a, or the MIME type audio/MP4).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>MPEG4AudioTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      appleProtectedMPEG4AudioTypeUTI
@abstract    Gets an UTI object for the 'com.apple.protected-mpeg-4-audio' UTI.
@return      An UTI object.
@discussion  The type identifier for Apple protected MPEG4 format (.m4p, iTunes music store format).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>appleProtectedMPEG4AudioTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      folderTypeUTI
@abstract    Gets an UTI object for the 'public.folder' UTI.
@return      An UTI object.
@discussion  The type identifier for a a user-browsable directory (i.e., not a package).</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>folderTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      volumeTypeUTI
@abstract    Gets an UTI object for the 'public.volume' UTI.
@return      An UTI object.
@discussion  The type identifier for the root folder of a volume/mount point.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>volumeTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      packageTypeUTI
@abstract    Gets an UTI object for the 'com.apple.package' UTI.
@return      An UTI object.
@discussion  The type identifier for a packaged directory.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>packageTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      bundleTypeUTI
@abstract    Gets an UTI object for the 'com.apple.bundle' UTI.
@return      An UTI object.
@discussion  The type identifier for a directory conforming to a CFBundle layout</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>bundleTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      frameworkTypeUTI
@abstract    Gets an UTI object for the 'com.apple.framework' UTI.
@return      An UTI object.
@discussion  The type identifier for directory conforming to an OS X framework.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>frameworkTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      applicationBundleTypeUTI
@abstract    Gets an UTI object for the 'com.apple.application-bundle' UTI.
@return      An UTI object.
@discussion  The type identifier for a bundled application.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>applicationBundleTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      applicationFileTypeUTI
@abstract    Gets an UTI object for the 'com.apple.application-file' UTI.
@return      An UTI object.
@discussion  The type identifier for a single-file Carbon/Classic application.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>applicationFileTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      vCardTypeUTI
@abstract    Gets an UTI object for the 'public.vcard' UTI.
@return      An UTI object.
@discussion  The type identifier for VCard format.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>vCardTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      inkTextTypeUTI
@abstract    Gets an UTI object for the 'com.apple.ink.inktext' UTI.
@return      An UTI object.
@discussion  The type identifier for Opaque InkText data.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>instancetype</declaration_param> )<declaration_var>inkTextTypeUTI</declaration_var>;   <declaration_comment>/*!
@method      allUTIsWithFileExtension:
@abstract    Gets an array of all uniform type identifiers for the specified file extension.
@param       extension   The file extension.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithFileExtension</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>extension</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithFileExtension:
@abstract    Gets an array of all uniform type identifiers for the specified file extension.
@param       extension   The file extension.
@param       dyn         Allows dynamic UTIs.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithFileExtension</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>extension</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithFileExtension:conformingTo:
@abstract    Gets an array of all uniform type identifiers for the specified file extension.
@param       extension   The file extension.
@param       uti         If not nil, all returned uniform type identifiers must conform to this parameter.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithFileExtension</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>extension</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithFileExtension:conformingTo:
@abstract    Gets an array of all uniform type identifiers for the specified file extension.
@param       extension   The file extension.
@param       uti         If not nil, all returned uniform type identifiers must conform to this parameter.
@param       dyn         Allows dynamic UTIs.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithFileExtension</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>extension</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>uti</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithMIMEType:
@abstract    Gets an array of all uniform type identifiers for the specified mime-type.
@param       type        The mime-type.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithMIMEType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>;   <declaration_comment>/*!
@method      allUTIsWithMIMEType:
@abstract    Gets an array of all uniform type identifiers for the specified mime-type.
@param       type        The mime-type.
@param       dyn         Allows dynamic UTIs.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithMIMEType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithMIMEType:conformingTo:
@abstract    Gets an array of all uniform type identifiers for the specified mime-type.
@param       type        The mime-type.
@param       uti         If not nil, all returned uniform type identifiers must conform to this parameter.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithMIMEType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithMIMEType:conformingTo:
@abstract    Gets an array of all uniform type identifiers for the specified mime-type.
@param       type        The mime-type.
@param       uti         If not nil, all returned uniform type identifiers must conform to this parameter.
@param       dyn         Allows dynamic UTIs.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithMIMEType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>uti</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithNSPboardType:
@abstract    Gets an array of all uniform type identifiers for the specified NSPasteboardType.
@param       type        The NSPasteboardType.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithNSPboardType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>;   <declaration_comment>/*!
@method      allUTIsWithNSPboardType:
@abstract    Gets an array of all uniform type identifiers for the specified NSPasteboardType.
@param       type        The NSPasteboardType.
@param       dyn         Allows dynamic UTIs.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithNSPboardType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithNSPboardType:conformingTo:
@abstract    Gets an array of all uniform type identifiers for the specified NSPasteboardType.
@param       type        The NSPasteboardType.
@param       uti         If not nil, all returned uniform type identifiers must conform to this parameter.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithNSPboardType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithNSPboardType:conformingTo:
@abstract    Gets an array of all uniform type identifiers for the specified NSPasteboardType.
@param       type        The NSPasteboardType.
@param       uti         If not nil, all returned uniform type identifiers must conform to this parameter.
@param       dyn         Allows dynamic UTIs.
@return      An array of uniform type identifiers.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithNSPboardType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>uti</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithOSType:
@abstract    Gets an array of all uniform type identifiers for the specified OSType.
@param       type        The OSType.
@return      An array of uniform type identifiers.
@see         stringForOSType</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithOSType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>;   <declaration_comment>/*!
@method      allUTIsWithOSType:
@abstract    Gets an array of all uniform type identifiers for the specified OSType.
@param       type        The OSType.
@param       dyn         Allows dynamic UTIs.
@return      An array of uniform type identifiers.
@see         stringForOSType</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithOSType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithOSType:conformingTo:
@abstract    Gets an array of all uniform type identifiers for the specified OSType.
@param       type        The OSType.
@param       uti         If not nil, all returned uniform type identifiers must conform to this parameter.
@return      An array of uniform type identifiers.
@see         stringForOSType</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithOSType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithOSType:conformingTo:
@abstract    Gets an array of all uniform type identifiers for the specified OSType.
@param       type        The OSType.
@param       uti         If not nil, all returned uniform type identifiers must conform to this parameter.
@param       dyn         Allows dynamic UTIs.
@return      An array of uniform type identifiers.
@see         stringForOSType</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithOSType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>uti</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      allUTIsWithTag:tagClass:conformingTo:
@abstract    Gets an array of all uniform type identifiers for the type indicated by the specified tag.
@param       tag         The tag to translate into a uniform type identifier.
@param       tagClass    The class of the tag parameter.
@param       uti         If not nil, all returned uniform type identifiers must conform to this parameter.
@param       dyn         Allows dynamic UTIs.
@return      An array of uniform type identifiers.
@discussion  This method is used to translate a type declared using another
declaration mechanism (for example, MIME types) into a uniform
type identifier. This method searches all UTI declarations for
a matching translation and returns all possible results.
If a conforming parameter is assigned, the search is reduced to
the subset of type identifiers that conform to that type.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>allUTIsWithTag</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>tag</declaration_type> <declaration_type>tagClass</declaration_type>: ( <declaration_param>UTITagClass</declaration_param> )<declaration_type>tagClass</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>uti</declaration_type> <declaration_type>allowDynamic</declaration_type>: ( <declaration_param>BOOL</declaration_param> )<declaration_var>dyn</declaration_var>;   
    <declaration_comment>/*!
@method      stringForOSType:
@abstract    Encodes an OSType into a string suitable for use as a tag argument.
@param       type        The OSType to convert.
@return      A string that encodes the OSType.
@discussion  This method is only available for OS X targets. On iOS platforms,
nil will be always returned.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>stringForOSType</declaration_type>: ( <declaration_param>OSType</declaration_param> )<declaration_var>type</declaration_var>;   <declaration_comment>/*!
@method      OSTypeForString:
@abstract    Decodes a tag string into an OSType.
@param       str         A string that encodes an OSType.
@return      The OSType that was encoded in the string.
@discussion  This method is only available for OS X targets. On iOS platforms,
nil will be always returned.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    + ( <declaration_param>OSType</declaration_param> )<declaration_type>OSTypeForString</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>str</declaration_var>;   <declaration_comment>/*!
@method      initWithString:
@abstract    Initializes an UTI object with a string.
@param       str         The UTI identifier, as a string.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>instancetype</declaration_param> )<declaration_type>initWithString</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>str</declaration_var>;   <declaration_comment>/*!
@method      initWithCFString:
@abstract    Initializes an UTI object with a CoreFoundation string.
@param       str         The UTI identifier, as a CoreFoundation string.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>instancetype</declaration_param> )<declaration_type>initWithCFString</declaration_type>: ( <declaration_param>CFStringRef</declaration_param> )<declaration_type>str</declaration_type> <declaration_var>NS_DESIGNATED_INITIALIZER</declaration_var>;   
    <declaration_comment>/*!
@method      initWithFileExtension:
@abstract    Initializes an UTI object with a file extension.
@param       extension   The file extension.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>instancetype</declaration_param> )<declaration_type>initWithFileExtension</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>extension</declaration_var>;   
    <declaration_comment>/*!
@method      initWithFileExtension:conformingTo:
@abstract    Initializes an UTI object with a file extension.
@param       extension   The file extension.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>instancetype</declaration_param> )<declaration_type>initWithFileExtension</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>extension</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      initWithMIMEType:
@abstract    Initializes an UTI object with a mime-type.
@param       type        The mime-type.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>instancetype</declaration_param> )<declaration_type>initWithMIMEType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>;   <declaration_comment>/*!
@method      initWithMIMEType:conformingTo:
@abstract    Initializes an UTI object with a mime-type.
@param       type        The mime-type.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>instancetype</declaration_param> )<declaration_type>initWithMIMEType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      initWithNSPboardType
@abstract    Initializes an UTI object with a NSPasteboardType.
@param       type        The NSPasteboardType.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>instancetype</declaration_param> )<declaration_type>initWithNSPboardType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>;   <declaration_comment>/*!
@method      initWithNSPboardType:conformingTo:
@abstract    Initializes an UTI object with a NSPasteboardType.
@param       type        The NSPasteboardType.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@return      An UTI object.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>instancetype</declaration_param> )<declaration_type>initWithNSPboardType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      initWithOSType:
@abstract    Initializes an UTI object with an OSType.
@param       type        The OSType.
@return      An UTI object.
@see         stringForOSType</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>instancetype</declaration_param> )<declaration_type>initWithOSType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>;   <declaration_comment>/*!
@method      initWithOSType:conformingTo:
@abstract    Initializes an UTI object with an OSType.
@param       type        The OSType.
@param       uti         If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.
@return      An UTI object.
@see         stringForOSType</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>instancetype</declaration_param> )<declaration_type>initWithOSType</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>type</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   
    <declaration_comment>/*!
@method      initWithTag:tagClass:conformingTo:
@abstract    Initializes a uniform type identifier for the type indicated by the specified tag.
@param       tag         The tag to translate into a uniform type identifier.
@param       tagClass    The class of the tag parameter.
@param       uti         If not nil, the returned uniform type identifier must conform to this parameter.
@return      An UTI object
@discussion  This method is used to translate a type declared using another
declaration mechanism (for example, MIME types) into a uniform
type identifier. This method searches all UTI declarations for
a matching translation. If a conforming parameter is assigned,
the search is reduced to the subset of type identifiers that
conform to that type.
@see         UTITagClass</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>instancetype</declaration_param> )<declaration_type>initWithTag</declaration_type>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>tag</declaration_type> <declaration_type>tagClass</declaration_type>: ( <declaration_param>UTITagClass</declaration_param> )<declaration_type>tagClass</declaration_type> <declaration_type>conformingTo</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>uti</declaration_type> <declaration_var>NS_DESIGNATED_INITIALIZER</declaration_var>;   
    <declaration_comment>/*!
@method      preferredTagForTagClass:
@abstract    Translates a uniform type identifier to a list of tags in a different type classification method.
@param       tagClass    The class of the tags you want to return.
@return      A string value
@see         UTITagClass</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>preferredTagForTagClass</declaration_type>: ( <declaration_param>UTITagClass</declaration_param> )<declaration_var>tagClass</declaration_var>;   
    <declaration_comment>/*!
@method      isEqualToUTI:
@abstract    Returns a Boolean value that indicates whether a given object is an UTI object and exactly equal the receiver.
@param       uti         The UTI object to compare with the receiver.
@return      YES if the uti is an UTI object and is exactly equal to the receiver, otherwise NO.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>BOOL</declaration_param> )<declaration_type>isEqualToUTI</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   <declaration_comment>/*!
@method      conformsToUTI
@abstract    Returns a Boolean value that indicates whether a given object is an UTI object and conforms to the receiver.
@param       uti         The UTI object to compare for conformance with the receiver.
@return      YES if the uti is an UTI object and is conforms to the receiver, otherwise NO.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>BOOL</declaration_param> )<declaration_type>conformsToUTI</declaration_type>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>;   <declaration_comment>/*!
@method      objectForDeclarationDictionaryKey
@abstract    Gets a value from the UTI declaration's dictionary
@param       key         The dictionary key.
@return      The dictionary value corresponding to the specified key.</declaration_comment>
        <declaration_comment>*/</declaration_comment>
    - ( <declaration_param>id</declaration_param> )<declaration_type>objectForDeclarationDictionaryKey</declaration_type>: ( <declaration_param>UTIDeclarationDictionaryKey</declaration_param> )<declaration_var>key</declaration_var>;   
    @@end </declaration>
<desc><p>Uniform Type Identifiers (or UTIs) are strings which uniquely
identify abstract types. They can be used to describe a file
format or an in-memory data type, but can also be used to
describe the type of other sorts of entities, such as
directories, volumes, or packages.
</p></desc>
<methods><method id="//xsdoc_ref/occ/clm/UTI/abstractTypes" lang="occ" type="clm" accessControl="private"><name>abstractTypes</name>
<abstract><p>Gets the known uniform type identifiers that most other type identifiers are derived from.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array with the corresponding UTIs.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>abstractTypes</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/aliasFileTypeUTI" lang="occ" type="clm" accessControl="private"><name>aliasFileTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.alias-file' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>aliasFileTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a fully-formed alias file.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/aliasRecordTypeUTI" lang="occ" type="clm" accessControl="private"><name>aliasRecordTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.alias-record' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>aliasRecordTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for raw alias data.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithFileExtension:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithFileExtension:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>extension</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithFileExtension:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithFileExtension:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithFileExtension:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/allUTIsWithFileExtension:allowDynamic:" isseealso="yes">allUTIsWithFileExtension:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/allUTIsWithFileExtension:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithFileExtension:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithFileExtension:allowDynamic:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithFileExtension:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithFileExtension:" isseealso="yes">allUTIsWithFileExtension:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/allUTIsWithFileExtension:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithFileExtension:conformingTo:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithFileExtension:conformingTo:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithFileExtension:conformingTo:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithFileExtension:conformingTo:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithFileExtension:conformingTo:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/allUTIsWithFileExtension:conformingTo:allowDynamic:" isseealso="yes">allUTIsWithFileExtension:conformingTo:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/allUTIsWithFileExtension:conformingTo:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithFileExtension:conformingTo:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithFileExtension:conformingTo:allowDynamic:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithFileExtension:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithFileExtension:conformingTo:" isseealso="yes">allUTIsWithFileExtension:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/allUTIsWithFileExtension:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithMIMEType:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithMIMEType:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithMIMEType:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithMIMEType:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithMIMEType:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/allUTIsWithMIMEType:allowDynamic:" isseealso="yes">allUTIsWithMIMEType:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/allUTIsWithMIMEType:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithMIMEType:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithMIMEType:allowDynamic:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithMIMEType:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithMIMEType:" isseealso="yes">allUTIsWithMIMEType:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/allUTIsWithMIMEType:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithMIMEType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithMIMEType:conformingTo:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithMIMEType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithMIMEType:conformingTo:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithMIMEType:conformingTo:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/allUTIsWithMIMEType:conformingTo:allowDynamic:" isseealso="yes">allUTIsWithMIMEType:conformingTo:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/allUTIsWithMIMEType:conformingTo:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithMIMEType:conformingTo:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithMIMEType:conformingTo:allowDynamic:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithMIMEType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithMIMEType:conformingTo:" isseealso="yes">allUTIsWithMIMEType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/allUTIsWithMIMEType:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithNSPboardType:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithNSPboardType:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithNSPboardType:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithNSPboardType:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithNSPboardType:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/allUTIsWithNSPboardType:allowDynamic:" isseealso="yes">allUTIsWithNSPboardType:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/allUTIsWithNSPboardType:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithNSPboardType:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithNSPboardType:allowDynamic:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithNSPboardType:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithNSPboardType:" isseealso="yes">allUTIsWithNSPboardType:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/allUTIsWithNSPboardType:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithNSPboardType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithNSPboardType:conformingTo:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithNSPboardType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithNSPboardType:conformingTo:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithNSPboardType:conformingTo:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/allUTIsWithNSPboardType:conformingTo:allowDynamic:" isseealso="yes">allUTIsWithNSPboardType:conformingTo:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/allUTIsWithNSPboardType:conformingTo:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithNSPboardType:conformingTo:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithNSPboardType:conformingTo:allowDynamic:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithNSPboardType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithNSPboardType:conformingTo:" isseealso="yes">allUTIsWithNSPboardType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/allUTIsWithNSPboardType:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithOSType:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithOSType:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>stringForOSType</name><value><hd_link logicalPath="stringForOSType" isseealso="yes">stringForOSType</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithOSType:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithOSType:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>stringForOSType</name><value><hd_link logicalPath="stringForOSType" isseealso="yes">stringForOSType</hd_link></value></item></list></listattribute>
<listattribute><name>See Also</name><list>
<item><name>allUTIsWithOSType:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/allUTIsWithOSType:allowDynamic:" isseealso="yes">allUTIsWithOSType:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/allUTIsWithOSType:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithOSType:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithOSType:allowDynamic:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithOSType:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithOSType:" isseealso="yes">allUTIsWithOSType:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/allUTIsWithOSType:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithOSType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithOSType:conformingTo:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>stringForOSType</name><value><hd_link logicalPath="stringForOSType" isseealso="yes">stringForOSType</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithOSType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithOSType:conformingTo:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>stringForOSType</name><value><hd_link logicalPath="stringForOSType" isseealso="yes">stringForOSType</hd_link></value></item></list></listattribute>
<listattribute><name>See Also</name><list>
<item><name>allUTIsWithOSType:conformingTo:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/allUTIsWithOSType:conformingTo:allowDynamic:" isseealso="yes">allUTIsWithOSType:conformingTo:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/allUTIsWithOSType:conformingTo:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithOSType:conformingTo:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithOSType:conformingTo:allowDynamic:</name>
<abstract><p>Gets an array of all uniform type identifiers for the specified OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithOSType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithOSType:conformingTo:" isseealso="yes">allUTIsWithOSType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/allUTIsWithOSType:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithTag:tagClass:conformingTo:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithTag:tagClass:conformingTo:</name>
<abstract><p>Gets an array of all uniform type identifiers for the type indicated by the specified tag.
</p></abstract>
<parameterlist>
<parameter><name>tag</name><desc><p>The tag to translate into a uniform type identifier.</p></desc></parameter>
<parameter><name>tagClass</name><desc><p>The class of the tag parameter.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithTag:tagClass:conformingTo:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/allUTIsWithTag:tagClass:conformingTo:allowDynamic:" isseealso="yes">allUTIsWithTag:tagClass:conformingTo:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<result><p>An array of uniform type identifiers.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithTag</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>tag</declaration_param> <declaration_function>tagClass</declaration_function>: ( <declaration_type>UTITagClass</declaration_type> )<declaration_param>tagClass</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p>This method is used to translate a type declared using another
declaration mechanism (for example, MIME types) into a uniform
type identifier. This method searches all UTI declarations for
a matching translation and returns all possible results.
If a conforming parameter is assigned, the search is reduced to
the subset of type identifiers that conform to that type.
</p></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/allUTIsWithTag:tagClass:conformingTo:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/allUTIsWithTag:tagClass:conformingTo:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>allUTIsWithTag:tagClass:conformingTo:allowDynamic:</name>
<abstract><p>Gets an array of all uniform type identifiers for the type indicated by the specified tag.
</p></abstract>
<parameterlist>
<parameter><name>tag</name><desc><p>The tag to translate into a uniform type identifier.</p></desc></parameter>
<parameter><name>tagClass</name><desc><p>The class of the tag parameter.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, all returned uniform type identifiers must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>allUTIsWithTag:tagClass:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/allUTIsWithTag:tagClass:conformingTo:" isseealso="yes">allUTIsWithTag:tagClass:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSArray * </returntype>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>allUTIsWithTag</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>tag</declaration_param> <declaration_function>tagClass</declaration_function>: ( <declaration_type>UTITagClass</declaration_type> )<declaration_param>tagClass</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p>This method is used to translate a type declared using another
declaration mechanism (for example, MIME types) into a uniform
type identifier. This method searches all UTI declarations for
a matching translation and returns all possible results.
If a conforming parameter is assigned, the search is reduced to
the subset of type identifiers that conform to that type.
</p></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/allUTIsWithTag:tagClass:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/appleICNSTypeUTI" lang="occ" type="clm" accessControl="private"><name>appleICNSTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.icns' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>appleICNSTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Apple icon data.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/appleProtectedMPEG4AudioTypeUTI" lang="occ" type="clm" accessControl="private"><name>appleProtectedMPEG4AudioTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.protected-mpeg-4-audio' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>appleProtectedMPEG4AudioTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Apple protected MPEG4 format (.m4p, iTunes music store format).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/applicationBundleTypeUTI" lang="occ" type="clm" accessControl="private"><name>applicationBundleTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.application-bundle' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>applicationBundleTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a bundled application.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/applicationFileTypeUTI" lang="occ" type="clm" accessControl="private"><name>applicationFileTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.application-file' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>applicationFileTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a single-file Carbon/Classic application.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/applicationTypes" lang="occ" type="clm" accessControl="private"><name>applicationTypes</name>
<abstract><p>Gets the known uniform type identifiers for application types.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array with the corresponding UTIs.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>applicationTypes</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/applicationTypeUTI" lang="occ" type="clm" accessControl="private"><name>applicationTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.application' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>applicationTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Mac apps.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/archiveTypeUTI" lang="occ" type="clm" accessControl="private"><name>archiveTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.archive' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>archiveTypeUTI</declaration_var>; </declaration>
<desc><p>The abstract type identifier for an archive of files and directories.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/audioTypeUTI" lang="occ" type="clm" accessControl="private"><name>audioTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.audio' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>audioTypeUTI</declaration_var>; </declaration>
<desc><p>An abstract type identifier for pure audio data (no video).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/audioVisualContentTypes" lang="occ" type="clm" accessControl="private"><name>audioVisualContentTypes</name>
<abstract><p>Gets the known uniform type identifier for audio and video content.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array with the corresponding UTIs.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>audioVisualContentTypes</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/audiovisualContentTypeUTI" lang="occ" type="clm" accessControl="private"><name>audiovisualContentTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.audiovisual-content' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>audiovisualContentTypeUTI</declaration_var>; </declaration>
<desc><p>An abstract type identifier for audio and/or video content.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/BMPTypeUTI" lang="occ" type="clm" accessControl="private"><name>BMPTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.microsoft.bmp' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>BMPTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a Windows bitmap.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/bundleTypeUTI" lang="occ" type="clm" accessControl="private"><name>bundleTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.bundle' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>bundleTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a directory conforming to a CFBundle layout
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/CHeaderTypeUTI" lang="occ" type="clm" accessControl="private"><name>CHeaderTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.c-header' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>CHeaderTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a C header.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/compositeContentTypes" lang="occ" type="clm" accessControl="private"><name>compositeContentTypes</name>
<abstract><p>Gets the known uniform type identifiers for content that includes multiple data types.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array with the corresponding UTIs.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>compositeContentTypes</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/compositeContentTypeUTI" lang="occ" type="clm" accessControl="private"><name>compositeContentTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.composite-content' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>compositeContentTypeUTI</declaration_var>; </declaration>
<desc><p>The abstract type identifier for content formats supporting mixed embedded content (i.e., compound documents).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/concreteTypes" lang="occ" type="clm" accessControl="private"><name>concreteTypes</name>
<abstract><p>Gets the known uniform type identifiers for concrete types.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array with the corresponding UTIs.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>concreteTypes</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/instm/UTI/conformsToUTI:" lang="occ" type="instm" accessControl="private"><name>conformsToUTI:</name>
<abstract><p>Returns a Boolean value that indicates whether a given object is an UTI object and conforms to the receiver.
</p></abstract>
<parameterlist>
<parameter><name>uti</name><desc><p>The UTI object to compare for conformance with the receiver.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> BOOL </returntype>
<result><p>YES if the uti is an UTI object and is conforms to the receiver, otherwise NO.
</p></result>
<declaration>- ( <declaration_type>BOOL</declaration_type> )<declaration_function>conformsToUTI</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/contactTypes" lang="occ" type="clm" accessControl="private"><name>contactTypes</name>
<abstract><p>Gets the known uniform type identifiers for contact types.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array with the corresponding UTIs.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>contactTypes</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/contactTypeUTI" lang="occ" type="clm" accessControl="private"><name>contactTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.contact' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>contactTypeUTI</declaration_var>; </declaration>
<desc><p>The abstract type identifier for contact information( for example, a person, group, or organization).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/contentTypeUTI" lang="occ" type="clm" accessControl="private"><name>contentTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.content' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>contentTypeUTI</declaration_var>; </declaration>
<desc><p>The abstract type identifier for anything containing user-viewable document content (documents, pasteboard data, and document packages).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/CPlusPlusHeaderTypeUTI" lang="occ" type="clm" accessControl="private"><name>CPlusPlusHeaderTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.c-plus-plus-header' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>CPlusPlusHeaderTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a C++ header.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/CPlusPlusSourceTypeUTI" lang="occ" type="clm" accessControl="private"><name>CPlusPlusSourceTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.c-plus-plus-source' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>CPlusPlusSourceTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for C++ source code (.cp, etc.).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/CSourceTypeUTI" lang="occ" type="clm" accessControl="private"><name>CSourceTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.c-source' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>CSourceTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for C source code (.c).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/dataTypeUTI" lang="occ" type="clm" accessControl="private"><name>dataTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.data' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>dataTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for any sort of simple byte stream, including files and in-memory data.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/directoryTypes" lang="occ" type="clm" accessControl="private"><name>directoryTypes</name>
<abstract><p>Gets the known uniform type identifiers for different directory types.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array with the corresponding UTIs.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>directoryTypes</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/directoryTypeUTI" lang="occ" type="clm" accessControl="private"><name>directoryTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.directory' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>directoryTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a file system directory, including packages and folders.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/diskImageTypeUTI" lang="occ" type="clm" accessControl="private"><name>diskImageTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.disk-image' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>diskImageTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a data item mountable as a volume.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/fileURLTypeUTI" lang="occ" type="clm" accessControl="private"><name>fileURLTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.file-url' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>fileURLTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for the text of a "file:" URL.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/flatRTFDTypeUTI" lang="occ" type="clm" accessControl="private"><name>flatRTFDTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.flat-rtfd' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>flatRTFDTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Flattened RTFD (pasteboard format).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/folderTypeUTI" lang="occ" type="clm" accessControl="private"><name>folderTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.folder' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>folderTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a a user-browsable directory (i.e., not a package).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/frameworkTypeUTI" lang="occ" type="clm" accessControl="private"><name>frameworkTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.framework' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>frameworkTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for directory conforming to an OS X framework.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/GIFTypeUTI" lang="occ" type="clm" accessControl="private"><name>GIFTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.compuserve.gif' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>GIFTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a GIF image.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/HTMLTypeUTI" lang="occ" type="clm" accessControl="private"><name>HTMLTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.html' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>HTMLTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for HTML, any version.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/ICOTypeUTI" lang="occ" type="clm" accessControl="private"><name>ICOTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.microsoft.ico' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>ICOTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Windows icon data.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/imageContentTypes" lang="occ" type="clm" accessControl="private"><name>imageContentTypes</name>
<abstract><p>Gets the known uniform type identifiers for graphics content.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array with the corresponding UTIs.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>imageContentTypes</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/imageTypeUTI" lang="occ" type="clm" accessControl="private"><name>imageTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.image' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>imageTypeUTI</declaration_var>; </declaration>
<desc><p>The abstract type identifier for image data.
</p></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithCFString:" lang="occ" type="clm" accessControl="private"><name>initWithCFString:</name>
<abstract><p>Gets an UTI object with a CoreFoundation string.
</p></abstract>
<parameterlist>
<parameter><name>str</name><desc><p>The UTI identifier, as a CoreFoundation string.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithCFString:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithCFString:" isseealso="yes">UTIWithCFString:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithCFString</declaration_function>: ( <declaration_type>CFStringRef</declaration_type> )<declaration_var>str</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithCFString:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithCFString:_DONTLINK_2" lang="occ" type="clm" accessControl="private"><name>initWithCFString:</name>
<abstract><p>Gets an UTI object with a CoreFoundation string.
</p></abstract>
<parameterlist>
<parameter><name>str</name><desc><p>The UTI identifier, as a CoreFoundation string.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithCFString:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithCFString:allowDynamic:" isseealso="yes">UTIWithCFString:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithCFString</declaration_function>: ( <declaration_type>CFStringRef</declaration_type> )<declaration_param>str</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithCFString:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/instm/UTI/initWithCFString:" lang="occ" type="instm" accessControl="private"><name>initWithCFString:</name>
<abstract><p>Initializes an UTI object with a CoreFoundation string.
</p></abstract>
<parameterlist>
<parameter><name>str</name><desc><p>The UTI identifier, as a CoreFoundation string.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>- ( <declaration_type>instancetype</declaration_type> )<declaration_function>initWithCFString</declaration_function>: ( <declaration_type>CFStringRef</declaration_type> )<declaration_param>str</declaration_param> <declaration_var>NS_DESIGNATED_INITIALIZER</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:" lang="occ" type="clm" accessControl="private"><name>initWithFileExtension:</name>
<abstract><p>Gets an UTI object with a file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithFileExtension:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:" isseealso="yes">UTIWithFileExtension:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>extension</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:_DONTLINK_2" lang="occ" type="clm" accessControl="private"><name>initWithFileExtension:</name>
<abstract><p>Gets an UTI object with a file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithFileExtension:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:allowDynamic:" isseealso="yes">UTIWithFileExtension:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/instm/UTI/initWithFileExtension:" lang="occ" type="instm" accessControl="private"><name>initWithFileExtension:</name>
<abstract><p>Initializes an UTI object with a file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>- ( <declaration_type>instancetype</declaration_type> )<declaration_function>initWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>extension</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:conformingTo:" lang="occ" type="clm" accessControl="private"><name>initWithFileExtension:conformingTo:</name>
<abstract><p>Gets an UTI object with a file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithFileExtension:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:conformingTo:" isseealso="yes">UTIWithFileExtension:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:conformingTo:_DONTLINK_2" lang="occ" type="clm" accessControl="private"><name>initWithFileExtension:conformingTo:</name>
<abstract><p>Gets an UTI object with a file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithFileExtension:conformingTo:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:conformingTo:allowDynamic:" isseealso="yes">UTIWithFileExtension:conformingTo:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:conformingTo:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/instm/UTI/initWithFileExtension:conformingTo:" lang="occ" type="instm" accessControl="private"><name>initWithFileExtension:conformingTo:</name>
<abstract><p>Initializes an UTI object with a file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>- ( <declaration_type>instancetype</declaration_type> )<declaration_function>initWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:" lang="occ" type="clm" accessControl="private"><name>initWithMIMEType:</name>
<abstract><p>Gets an UTI object with a mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithMIMEType:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:" isseealso="yes">UTIWithMIMEType:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:_DONTLINK_2" lang="occ" type="clm" accessControl="private"><name>initWithMIMEType:</name>
<abstract><p>Gets an UTI object with a mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithMIMEType:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:allowDynamic:" isseealso="yes">UTIWithMIMEType:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/instm/UTI/initWithMIMEType:" lang="occ" type="instm" accessControl="private"><name>initWithMIMEType:</name>
<abstract><p>Initializes an UTI object with a mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>- ( <declaration_type>instancetype</declaration_type> )<declaration_function>initWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>initWithMIMEType:conformingTo:</name>
<abstract><p>Gets an UTI object with a mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithMIMEType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:conformingTo:" isseealso="yes">UTIWithMIMEType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:conformingTo:_DONTLINK_2" lang="occ" type="clm" accessControl="private"><name>initWithMIMEType:conformingTo:</name>
<abstract><p>Gets an UTI object with a mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithMIMEType:conformingTo:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:conformingTo:allowDynamic:" isseealso="yes">UTIWithMIMEType:conformingTo:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:conformingTo:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/instm/UTI/initWithMIMEType:conformingTo:" lang="occ" type="instm" accessControl="private"><name>initWithMIMEType:conformingTo:</name>
<abstract><p>Initializes an UTI object with a mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>- ( <declaration_type>instancetype</declaration_type> )<declaration_function>initWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType" lang="occ" type="clm" accessControl="private"><name>initWithNSPboardType</name>
<abstract><p>Gets an UTI object with a NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithNSPboardType:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:" isseealso="yes">UTIWithNSPboardType:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType_DONTLINK_2" lang="occ" type="clm" accessControl="private"><name>initWithNSPboardType</name>
<abstract><p>Gets an UTI object with a NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithNSPboardType:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:allowDynamic:" isseealso="yes">UTIWithNSPboardType:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/instm/UTI/initWithNSPboardType:" lang="occ" type="instm" accessControl="private"><name>initWithNSPboardType:</name>
<abstract><p>Initializes an UTI object with a NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>- ( <declaration_type>instancetype</declaration_type> )<declaration_function>initWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>initWithNSPboardType:conformingTo:</name>
<abstract><p>Gets an UTI object with a NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithNSPboardType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:conformingTo:" isseealso="yes">UTIWithNSPboardType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType:conformingTo:_DONTLINK_2" lang="occ" type="clm" accessControl="private"><name>initWithNSPboardType:conformingTo:</name>
<abstract><p>Gets an UTI object with a NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithNSPboardType:conformingTo:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:conformingTo:allowDynamic:" isseealso="yes">UTIWithNSPboardType:conformingTo:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:conformingTo:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/instm/UTI/initWithNSPboardType:conformingTo:" lang="occ" type="instm" accessControl="private"><name>initWithNSPboardType:conformingTo:</name>
<abstract><p>Initializes an UTI object with a NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>- ( <declaration_type>instancetype</declaration_type> )<declaration_function>initWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithOSType:" lang="occ" type="clm" accessControl="private"><name>initWithOSType:</name>
<abstract><p>Gets an UTI object with an OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>stringForOSType</name><value><hd_link logicalPath="stringForOSType" isseealso="yes">stringForOSType</hd_link></value></item></list></listattribute>
<listattribute><name>See Also</name><list>
<item><name>UTIWithOSType:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithOSType:" isseealso="yes">UTIWithOSType:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithOSType:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithOSType:_DONTLINK_2" lang="occ" type="clm" accessControl="private"><name>initWithOSType:</name>
<abstract><p>Gets an UTI object with an OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>stringForOSType</name><value><hd_link logicalPath="stringForOSType" isseealso="yes">stringForOSType</hd_link></value></item></list></listattribute>
<listattribute><name>See Also</name><list>
<item><name>UTIWithOSType:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithOSType:allowDynamic:" isseealso="yes">UTIWithOSType:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithOSType:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/instm/UTI/initWithOSType:" lang="occ" type="instm" accessControl="private"><name>initWithOSType:</name>
<abstract><p>Initializes an UTI object with an OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>stringForOSType</name><value><hd_link logicalPath="stringForOSType" isseealso="yes">stringForOSType</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>- ( <declaration_type>instancetype</declaration_type> )<declaration_function>initWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithOSType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>initWithOSType:conformingTo:</name>
<abstract><p>Gets an UTI object with an OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>stringForOSType</name><value><hd_link logicalPath="stringForOSType" isseealso="yes">stringForOSType</hd_link></value></item></list></listattribute>
<listattribute><name>See Also</name><list>
<item><name>UTIWithOSType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithOSType:conformingTo:" isseealso="yes">UTIWithOSType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithOSType:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithOSType:conformingTo:_DONTLINK_2" lang="occ" type="clm" accessControl="private"><name>initWithOSType:conformingTo:</name>
<abstract><p>Gets an UTI object with an OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>stringForOSType</name><value><hd_link logicalPath="stringForOSType" isseealso="yes">stringForOSType</hd_link></value></item></list></listattribute>
<listattribute><name>See Also</name><list>
<item><name>UTIWithOSType:conformingTo:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithOSType:conformingTo:allowDynamic:" isseealso="yes">UTIWithOSType:conformingTo:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithOSType:conformingTo:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/instm/UTI/initWithOSType:conformingTo:" lang="occ" type="instm" accessControl="private"><name>initWithOSType:conformingTo:</name>
<abstract><p>Initializes an UTI object with an OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>stringForOSType</name><value><hd_link logicalPath="stringForOSType" isseealso="yes">stringForOSType</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>- ( <declaration_type>instancetype</declaration_type> )<declaration_function>initWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithString:" lang="occ" type="clm" accessControl="private"><name>initWithString:</name>
<abstract><p>Gets an UTI object with a string.
</p></abstract>
<parameterlist>
<parameter><name>str</name><desc><p>The UTI identifier, as a string.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithString:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithString:" isseealso="yes">UTIWithString:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithString</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>str</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithString:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithString:_DONTLINK_2" lang="occ" type="clm" accessControl="private"><name>initWithString:</name>
<abstract><p>Gets an UTI object with a string.
</p></abstract>
<parameterlist>
<parameter><name>str</name><desc><p>The UTI identifier, as a string.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>UTIWithString:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithString:allowDynamic:" isseealso="yes">UTIWithString:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithString</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>str</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithString:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/instm/UTI/initWithString:" lang="occ" type="instm" accessControl="private"><name>initWithString:</name>
<abstract><p>Initializes an UTI object with a string.
</p></abstract>
<parameterlist>
<parameter><name>str</name><desc><p>The UTI identifier, as a string.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>- ( <declaration_type>instancetype</declaration_type> )<declaration_function>initWithString</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>str</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/doc/title:clm/UTI/initWithTag:tagClass:conformingTo:" lang="occ" type="clm" accessControl="private"><name>initWithTag:tagClass:conformingTo:</name>
<abstract><p>Gets a uniform type identifier for the type indicated by the specified tag.
</p></abstract>
<parameterlist>
<parameter><name>tag</name><desc><p>The tag to translate into a uniform type identifier.</p></desc></parameter>
<parameter><name>tagClass</name><desc><p>The class of the tag parameter.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned uniform type identifier must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>UTITagClass</name><value><hd_link logicalPath="UTITagClass" isseealso="yes">UTITagClass</hd_link></value></item></list></listattribute>
<listattribute><name>See Also</name><list>
<item><name>UTIWithTag:tagClass:conformingTo:allowDynamic:</name><value><hd_link logicalPath="//xsdoc_ref/occ/clm/UTI/UTIWithTag:tagClass:conformingTo:allowDynamic:" isseealso="yes">UTIWithTag:tagClass:conformingTo:allowDynamic:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithTag</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>tag</declaration_param> <declaration_function>tagClass</declaration_function>: ( <declaration_type>UTITagClass</declaration_type> )<declaration_param>tagClass</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p>This method is used to translate a type declared using another
declaration mechanism (for example, MIME types) into a uniform
type identifier. This method searches all UTI declarations for
a matching translation. If a conforming parameter is assigned,
the search is reduced to the subset of type identifiers that
conform to that type.
</p></desc>
<autorelated>
<relateduid>//xsdoc_ref/occ/clm/UTI/UTIWithTag:tagClass:conformingTo:allowDynamic:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/instm/UTI/initWithTag:tagClass:conformingTo:" lang="occ" type="instm" accessControl="private"><name>initWithTag:tagClass:conformingTo:</name>
<abstract><p>Initializes a uniform type identifier for the type indicated by the specified tag.
</p></abstract>
<parameterlist>
<parameter><name>tag</name><desc><p>The tag to translate into a uniform type identifier.</p></desc></parameter>
<parameter><name>tagClass</name><desc><p>The class of the tag parameter.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned uniform type identifier must conform to this parameter.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>UTITagClass</name><value><hd_link logicalPath="UTITagClass" isseealso="yes">UTITagClass</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<result><p>An UTI object
</p></result>
<declaration>- ( <declaration_type>instancetype</declaration_type> )<declaration_function>initWithTag</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>tag</declaration_param> <declaration_function>tagClass</declaration_function>: ( <declaration_type>UTITagClass</declaration_type> )<declaration_param>tagClass</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_var>NS_DESIGNATED_INITIALIZER</declaration_var>; </declaration>
<desc><p>This method is used to translate a type declared using another
declaration mechanism (for example, MIME types) into a uniform
type identifier. This method searches all UTI declarations for
a matching translation. If a conforming parameter is assigned,
the search is reduced to the subset of type identifiers that
conform to that type.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/inkTextTypeUTI" lang="occ" type="clm" accessControl="private"><name>inkTextTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.ink.inktext' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>inkTextTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Opaque InkText data.
</p></desc>
</method><method id="//xsdoc_ref/occ/instm/UTI/isEqualToUTI:" lang="occ" type="instm" accessControl="private"><name>isEqualToUTI:</name>
<abstract><p>Returns a Boolean value that indicates whether a given object is an UTI object and exactly equal the receiver.
</p></abstract>
<parameterlist>
<parameter><name>uti</name><desc><p>The UTI object to compare with the receiver.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> BOOL </returntype>
<result><p>YES if the uti is an UTI object and is exactly equal to the receiver, otherwise NO.
</p></result>
<declaration>- ( <declaration_type>BOOL</declaration_type> )<declaration_function>isEqualToUTI</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/itemTypeUTI" lang="occ" type="clm" accessControl="private"><name>itemTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.item' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>itemTypeUTI</declaration_var>; </declaration>
<desc><p>The generic abstract type identifier for most things (files, directories).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/javaSourceTypeUTI" lang="occ" type="clm" accessControl="private"><name>javaSourceTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.sun.java-source' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>javaSourceTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Java source code.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/JPEG2000TypeUTI" lang="occ" type="clm" accessControl="private"><name>JPEG2000TypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.jpeg-2000' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>JPEG2000TypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a JPEG-2000 image.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/JPEGTypeUTI" lang="occ" type="clm" accessControl="private"><name>JPEGTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.jpeg' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>JPEGTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a JPEG image.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/messageTypeUTI" lang="occ" type="clm" accessControl="private"><name>messageTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.message' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>messageTypeUTI</declaration_var>; </declaration>
<desc><p>The abstract type identifier for messages (email, instant message, etc.).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/miscellaneousTypes" lang="occ" type="clm" accessControl="private"><name>miscellaneousTypes</name>
<abstract><p>Gets the known uniform type identifiers for types that do not fit in other categories.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array with the corresponding UTIs.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>miscellaneousTypes</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/mountPointTypeUTI" lang="occ" type="clm" accessControl="private"><name>mountPointTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.mount-point' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>mountPointTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a root directory of a volume.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/movieTypeUTI" lang="occ" type="clm" accessControl="private"><name>movieTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.movie' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>movieTypeUTI</declaration_var>; </declaration>
<desc><p>An abstract type identifier for a media format which may contain both video and audio. Corresponds to what users would label a "movie"
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/MP3TypeUTI" lang="occ" type="clm" accessControl="private"><name>MP3TypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.mp3' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>MP3TypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for MP3 audio.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/MPEG4AudioTypeUTI" lang="occ" type="clm" accessControl="private"><name>MPEG4AudioTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.mpeg-4-audio' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>MPEG4AudioTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a MPEG-4 audio layer (.m4a, or the MIME type audio/MP4).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/MPEG4TypeUTI" lang="occ" type="clm" accessControl="private"><name>MPEG4TypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.mpeg-4' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>MPEG4TypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a MPEG-4 movie.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/MPEGTypeUTI" lang="occ" type="clm" accessControl="private"><name>MPEGTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.mpeg' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>MPEGTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a MPEG-1 or MPEG-2 movie.
</p></desc>
</method><method id="//xsdoc_ref/occ/instm/UTI/objectForDeclarationDictionaryKey:" lang="occ" type="instm" accessControl="private"><name>objectForDeclarationDictionaryKey:</name>
<abstract><p>Gets a value from the UTI declaration's dictionary
</p></abstract>
<parameterlist>
<parameter><name>key</name><desc><p>The dictionary key.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> id </returntype>
<result><p>The dictionary value corresponding to the specified key.
</p></result>
<declaration>- ( <declaration_type>id</declaration_type> )<declaration_function>objectForDeclarationDictionaryKey</declaration_function>: ( <declaration_type>UTIDeclarationDictionaryKey</declaration_type> )<declaration_var>key</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/objectiveCPlusPlusSourceTypeUTI" lang="occ" type="clm" accessControl="private"><name>objectiveCPlusPlusSourceTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.objective-c-plus-plus-source' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>objectiveCPlusPlusSourceTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Objective-C++ source code.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/objectiveCSourceTypeUTI" lang="occ" type="clm" accessControl="private"><name>objectiveCSourceTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.objective-c-source' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>objectiveCSourceTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Objective-C source code (.m).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/OSTypeForString:" lang="occ" type="clm" accessControl="private"><name>OSTypeForString:</name>
<abstract><p>Decodes a tag string into an OSType.
</p></abstract>
<parameterlist>
<parameter><name>str</name><desc><p>A string that encodes an OSType.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> OSType </returntype>
<result><p>The OSType that was encoded in the string.
</p></result>
<declaration>+ ( <declaration_type>OSType</declaration_type> )<declaration_function>OSTypeForString</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>str</declaration_var>; </declaration>
<desc><p>This method is only available for OS X targets. On iOS platforms,
nil will be always returned.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/packageTypeUTI" lang="occ" type="clm" accessControl="private"><name>packageTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.package' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>packageTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a packaged directory.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/PDFTypeUTI" lang="occ" type="clm" accessControl="private"><name>PDFTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.adobe.pdf' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>PDFTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Adobe PDF format.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/PICTTypeUTI" lang="occ" type="clm" accessControl="private"><name>PICTTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.pict' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>PICTTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a Quickdraw PICT.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/plainTextTypeUTI" lang="occ" type="clm" accessControl="private"><name>plainTextTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.plain-text' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>plainTextTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for text with no markup and in an unspecified encoding.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/PNGTypeUTI" lang="occ" type="clm" accessControl="private"><name>PNGTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.png' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>PNGTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a PNG image.
</p></desc>
</method><method id="//xsdoc_ref/occ/instm/UTI/preferredTagForTagClass:" lang="occ" type="instm" accessControl="private"><name>preferredTagForTagClass:</name>
<abstract><p>Translates a uniform type identifier to a list of tags in a different type classification method.
</p></abstract>
<parameterlist>
<parameter><name>tagClass</name><desc><p>The class of the tags you want to return.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>UTITagClass</name><value><hd_link logicalPath="UTITagClass" isseealso="yes">UTITagClass</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> NSString * </returntype>
<result><p>A string value
</p></result>
<declaration>- ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>preferredTagForTagClass</declaration_function>: ( <declaration_type>UTITagClass</declaration_type> )<declaration_var>tagClass</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/quickTimeImageTypeUTI" lang="occ" type="clm" accessControl="private"><name>quickTimeImageTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.quicktime-image' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>quickTimeImageTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a QuickTime image. Corresponds to the 'qtif' OSType.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/quickTimeMovieTypeUTI" lang="occ" type="clm" accessControl="private"><name>quickTimeMovieTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.quicktime-movie' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>quickTimeMovieTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a QuickTime movie.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/resolvableTypeUTI" lang="occ" type="clm" accessControl="private"><name>resolvableTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.resolvable' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>resolvableTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for symbolic links and alias files.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/RTFDTypeUTI" lang="occ" type="clm" accessControl="private"><name>RTFDTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.rtfd' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>RTFDTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Rich Text Format Directory (RTF with content embedding, on-disk format).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/RTFTypeUTI" lang="occ" type="clm" accessControl="private"><name>RTFTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.rtf' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>RTFTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for Rich Text Format.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/sourceCodeTypeUTI" lang="occ" type="clm" accessControl="private"><name>sourceCodeTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.source-code' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>sourceCodeTypeUTI</declaration_var>; </declaration>
<desc><p>The abstract type identifier for source code (any language).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/stringForOSType:" lang="occ" type="clm" accessControl="private"><name>stringForOSType:</name>
<abstract><p>Encodes an OSType into a string suitable for use as a tag argument.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType to convert.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSString * </returntype>
<result><p>A string that encodes the OSType.
</p></result>
<declaration>+ ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>stringForOSType</declaration_function>: ( <declaration_type>OSType</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p>This method is only available for OS X targets. On iOS platforms,
nil will be always returned.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/symLinkTypeUTI" lang="occ" type="clm" accessControl="private"><name>symLinkTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.symlink' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>symLinkTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a symbolic link.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/textTypes" lang="occ" type="clm" accessControl="private"><name>textTypes</name>
<abstract><p>Gets the known uniform type identifiers for text content.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<result><p>An array with the corresponding UTIs.
</p></result>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>textTypes</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/textTypeUTI" lang="occ" type="clm" accessControl="private"><name>textTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.text' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>textTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for all text-encoded data, including text with markup (HTML, RTF, etc.).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/TIFFTypeUTI" lang="occ" type="clm" accessControl="private"><name>TIFFTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.tiff' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>TIFFTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for a TIFF image.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/TXNTextAndMultimediaDataTypeUTI" lang="occ" type="clm" accessControl="private"><name>TXNTextAndMultimediaDataTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.txn.text-multimedia-data' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>TXNTextAndMultimediaDataTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for MLTE (Textension) format for mixed text and multimedia data. Corresponds to the 'txtn' OSType.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/URLTypeUTI" lang="occ" type="clm" accessControl="private"><name>URLTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.url' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>URLTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for the bytes of a URL.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTF16ExternalPlainTextTypeUTI" lang="occ" type="clm" accessControl="private"><name>UTF16ExternalPlainTextTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.utf16-external-plain-text' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>UTF16ExternalPlainTextTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for plain text in a UTF-16 encoding. If the encoded text does not include a byte order mark (BOM), the data has "external representation" byte order (big-endian).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTF16PlainTextTypeUTI" lang="occ" type="clm" accessControl="private"><name>UTF16PlainTextTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.utf16-plain-text' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>UTF16PlainTextTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for plain text in a UTF-16 encoding in native byte order. The byte order mark (BOM) is optional. Correspondes to the 'utxt' OSType.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTF8PlainTextTypeUTI" lang="occ" type="clm" accessControl="private"><name>UTF8PlainTextTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.utf8-plain-text' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>UTF8PlainTextTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for plain text in a UTF-8 encoding.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithCFString:" lang="occ" type="clm" accessControl="private"><name>UTIWithCFString:</name>
<abstract><p>Gets an UTI object with a CoreFoundation string.
</p></abstract>
<parameterlist>
<parameter><name>str</name><desc><p>The UTI identifier, as a CoreFoundation string.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithCFString:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithCFString:" isseealso="yes">initWithCFString:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithCFString</declaration_function>: ( <declaration_type>CFStringRef</declaration_type> )<declaration_var>str</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithCFString:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithCFString:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>UTIWithCFString:allowDynamic:</name>
<abstract><p>Gets an UTI object with a CoreFoundation string.
</p></abstract>
<parameterlist>
<parameter><name>str</name><desc><p>The UTI identifier, as a CoreFoundation string.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithCFString:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithCFString:_DONTLINK_1" isseealso="yes">initWithCFString:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithCFString</declaration_function>: ( <declaration_type>CFStringRef</declaration_type> )<declaration_param>str</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithCFString:_DONTLINK_1</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:" lang="occ" type="clm" accessControl="private"><name>UTIWithFileExtension:</name>
<abstract><p>Gets an UTI object with a file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithFileExtension:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:" isseealso="yes">initWithFileExtension:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>extension</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>UTIWithFileExtension:allowDynamic:</name>
<abstract><p>Gets an UTI object with a file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithFileExtension:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:_DONTLINK_1" isseealso="yes">initWithFileExtension:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:_DONTLINK_1</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:conformingTo:" lang="occ" type="clm" accessControl="private"><name>UTIWithFileExtension:conformingTo:</name>
<abstract><p>Gets an UTI object with a file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithFileExtension:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:conformingTo:" isseealso="yes">initWithFileExtension:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithFileExtension:conformingTo:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>UTIWithFileExtension:conformingTo:allowDynamic:</name>
<abstract><p>Gets an UTI object with a file extension.
</p></abstract>
<parameterlist>
<parameter><name>extension</name><desc><p>The file extension.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithFileExtension:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:conformingTo:_DONTLINK_1" isseealso="yes">initWithFileExtension:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithFileExtension</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>extension</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithFileExtension:conformingTo:_DONTLINK_1</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:" lang="occ" type="clm" accessControl="private"><name>UTIWithMIMEType:</name>
<abstract><p>Gets an UTI object with a mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithMIMEType:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:" isseealso="yes">initWithMIMEType:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>UTIWithMIMEType:allowDynamic:</name>
<abstract><p>Gets an UTI object with a mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithMIMEType:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:_DONTLINK_1" isseealso="yes">initWithMIMEType:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:_DONTLINK_1</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>UTIWithMIMEType:conformingTo:</name>
<abstract><p>Gets an UTI object with a mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithMIMEType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:conformingTo:" isseealso="yes">initWithMIMEType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithMIMEType:conformingTo:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>UTIWithMIMEType:conformingTo:allowDynamic:</name>
<abstract><p>Gets an UTI object with a mime-type.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The mime-type.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithMIMEType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:conformingTo:_DONTLINK_1" isseealso="yes">initWithMIMEType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithMIMEType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithMIMEType:conformingTo:_DONTLINK_1</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:" lang="occ" type="clm" accessControl="private"><name>UTIWithNSPboardType:</name>
<abstract><p>Gets an UTI object with a NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithNSPboardType</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType" isseealso="yes">initWithNSPboardType</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>UTIWithNSPboardType:allowDynamic:</name>
<abstract><p>Gets an UTI object with a NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithNSPboardType</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType_DONTLINK_1" isseealso="yes">initWithNSPboardType</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType_DONTLINK_1</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>UTIWithNSPboardType:conformingTo:</name>
<abstract><p>Gets an UTI object with a NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithNSPboardType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType:conformingTo:" isseealso="yes">initWithNSPboardType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithNSPboardType:conformingTo:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>UTIWithNSPboardType:conformingTo:allowDynamic:</name>
<abstract><p>Gets an UTI object with a NSPasteboardType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The NSPasteboardType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithNSPboardType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType:conformingTo:_DONTLINK_1" isseealso="yes">initWithNSPboardType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithNSPboardType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithNSPboardType:conformingTo:_DONTLINK_1</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithOSType:" lang="occ" type="clm" accessControl="private"><name>UTIWithOSType:</name>
<abstract><p>Gets an UTI object with an OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithOSType:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithOSType:" isseealso="yes">initWithOSType:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>type</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithOSType:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithOSType:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>UTIWithOSType:allowDynamic:</name>
<abstract><p>Gets an UTI object with an OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithOSType:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithOSType:_DONTLINK_1" isseealso="yes">initWithOSType:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithOSType:_DONTLINK_1</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithOSType:conformingTo:" lang="occ" type="clm" accessControl="private"><name>UTIWithOSType:conformingTo:</name>
<abstract><p>Gets an UTI object with an OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithOSType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithOSType:conformingTo:" isseealso="yes">initWithOSType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>uti</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithOSType:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithOSType:conformingTo:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>UTIWithOSType:conformingTo:allowDynamic:</name>
<abstract><p>Gets an UTI object with an OSType.
</p></abstract>
<parameterlist>
<parameter><name>type</name><desc><p>The OSType.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned UTI must conform to this parameter. Otherwise, nil will be returned.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithOSType:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithOSType:conformingTo:_DONTLINK_1" isseealso="yes">initWithOSType:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithOSType</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>type</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithOSType:conformingTo:_DONTLINK_1</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithString:" lang="occ" type="clm" accessControl="private"><name>UTIWithString:</name>
<abstract><p>Gets an UTI object with a string.
</p></abstract>
<parameterlist>
<parameter><name>str</name><desc><p>The UTI identifier, as a string.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithString:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithString:" isseealso="yes">initWithString:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithString</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>str</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithString:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithString:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>UTIWithString:allowDynamic:</name>
<abstract><p>Gets an UTI object with a string.
</p></abstract>
<parameterlist>
<parameter><name>str</name><desc><p>The UTI identifier, as a string.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithString:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithString:_DONTLINK_1" isseealso="yes">initWithString:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithString</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>str</declaration_param> 
        <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithString:_DONTLINK_1</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/UTIWithTag:tagClass:conformingTo:allowDynamic:" lang="occ" type="clm" accessControl="private"><name>UTIWithTag:tagClass:conformingTo:allowDynamic:</name>
<abstract><p>Gets a uniform type identifier for the type indicated by the specified tag.
</p></abstract>
<parameterlist>
<parameter><name>tag</name><desc><p>The tag to translate into a uniform type identifier.</p></desc></parameter>
<parameter><name>tagClass</name><desc><p>The class of the tag parameter.</p></desc></parameter>
<parameter><name>uti</name><desc><p>If not nil, the returned uniform type identifier must conform to this parameter.</p></desc></parameter>
<parameter><name>dyn</name><desc><p>Allows dynamic UTIs.</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>initWithTag:tagClass:conformingTo:</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:clm/UTI/initWithTag:tagClass:conformingTo:" isseealso="yes">initWithTag:tagClass:conformingTo:</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> instancetype </returntype>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_function>UTIWithTag</declaration_function>: ( <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>tag</declaration_param> <declaration_function>tagClass</declaration_function>: ( <declaration_type>UTITagClass</declaration_type> )<declaration_param>tagClass</declaration_param> 
        <declaration_function>conformingTo</declaration_function>: ( <declaration_type>UTI</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>uti</declaration_param> <declaration_function>allowDynamic</declaration_function>: ( <declaration_type>BOOL</declaration_type> )<declaration_var>dyn</declaration_var>; </declaration>
<desc><p>This method is used to translate a type declared using another
declaration mechanism (for example, MIME types) into a uniform
type identifier. This method searches all UTI declarations for
a matching translation. If a conforming parameter is assigned,
the search is reduced to the subset of type identifiers that
conform to that type.
</p></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:clm/UTI/initWithTag:tagClass:conformingTo:</relateduid>
</autorelated>
</method><method id="//xsdoc_ref/occ/clm/UTI/vCardTypeUTI" lang="occ" type="clm" accessControl="private"><name>vCardTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.vcard' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>vCardTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for VCard format.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/videoTypeUTI" lang="occ" type="clm" accessControl="private"><name>videoTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.video' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>videoTypeUTI</declaration_var>; </declaration>
<desc><p>An abstract type identifier for pure video data(no audio).
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/volumeTypeUTI" lang="occ" type="clm" accessControl="private"><name>volumeTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.volume' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>volumeTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for the root folder of a volume/mount point.
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/webArchiveTypeUTI" lang="occ" type="clm" accessControl="private"><name>webArchiveTypeUTI</name>
<abstract><p>Gets an UTI object for the 'com.apple.webarchive' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>webArchiveTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for the WebKit web archive format
</p></desc>
</method><method id="//xsdoc_ref/occ/clm/UTI/XMLTypeUTI" lang="occ" type="clm" accessControl="private"><name>XMLTypeUTI</name>
<abstract><p>Gets an UTI object for the 'public.xml' UTI.
</p></abstract>
<parsedparameterlist>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( BOOL )</type><name>dyn</name></parsedparameter>
<parsedparameter><type>( OSType )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>str</name></parsedparameter>
<parsedparameter><type>( CFStringRef )</type><name>str</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>extension</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>type</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( NSString * )</type><name>tag</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTITagClass )</type><name>tagClass</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTI * )</type><name>uti</name></parsedparameter>
<parsedparameter><type>( UTIDeclarationDictionaryKey )</type><name>key</name></parsedparameter>
</parsedparameterlist>
<returntype> instancetype </returntype>
<result><p>An UTI object.
</p></result>
<declaration>+ ( <declaration_type>instancetype</declaration_type> )<declaration_var>XMLTypeUTI</declaration_var>; </declaration>
<desc><p>The type identifier for XML data.
</p></desc>
</method></methods>
<properties><property id="//xsdoc_ref/occ/instp/UTI/conformsTo" lang="occ" accessControl="private"><name>conformsTo</name>
<abstract><p>Returns the UTIs to which this identifier conforms.
</p></abstract>
<returntype>NSArray *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> <declaration_var>conformsTo</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/declaration" lang="occ" accessControl="private"><name>declaration</name>
<abstract><p>Returns a uniform type’s declaration.
</p></abstract>
<returntype>NSDictionary *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSDictionary</declaration_type> <declaration_type>*</declaration_type> <declaration_var>declaration</declaration_var>; </declaration>
<desc><p>A uniform type identifier is declared in a bundle’s information
property list (info.plist). This method extracts and returns
a dictionary that contains the complete declaration of the
uniform type identifier. This is useful when your application
needs to access properties that does not have a built-in
accessor method.
</p></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/declaringBundleURL" lang="occ" accessControl="private"><name>declaringBundleURL</name>
<abstract><p>Returns the location of a bundle containing the declaration for a type.
</p></abstract>
<returntype>NSURL *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSURL</declaration_type> <declaration_type>*</declaration_type> <declaration_var>declaringBundleURL</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/description" lang="occ" accessControl="private"><name>description</name>
<abstract><p>Returns the localized, user-readable type description string associated with a uniform type identifier.
</p></abstract>
<returntype>NSString *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>description</declaration_var>; </declaration>
<desc><p>The localized string that describes the uniform type is found in the type’s declaration.
</p></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/exportedTypes" lang="occ" accessControl="private"><name>exportedTypes</name>
<abstract><p>Returns an array of exported UTI declarations.
</p></abstract>
<returntype>NSArray *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> <declaration_var>exportedTypes</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/iconFile" lang="occ" accessControl="private"><name>iconFile</name>
<abstract><p>Returns the name of the bundle icon resource to associate with this UTI.
</p></abstract>
<returntype>NSString *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>iconFile</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/identifier" lang="occ" accessControl="private"><name>identifier</name>
<abstract><p>Returns the uniform type identifier for the declared type.
</p></abstract>
<returntype>NSString *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>identifier</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/importedTypes" lang="occ" accessControl="private"><name>importedTypes</name>
<abstract><p>Returns an array of imported UTI declarations.
</p></abstract>
<returntype>NSArray *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> <declaration_var>importedTypes</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/isDynamic" lang="occ" accessControl="private"><name>isDynamic</name>
<abstract><p>Whether the UTI is dynamic or not
</p></abstract>
<returntype>BOOL</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>BOOL</declaration_type> <declaration_var>isDynamic</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/preferredFilenameExtension" lang="occ" accessControl="private"><name>preferredFilenameExtension</name>
<abstract><p>Returns the preferred filename extension for an UTI.
</p></abstract>
<returntype>NSString *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>preferredFilenameExtension</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/preferredMIMEType" lang="occ" accessControl="private"><name>preferredMIMEType</name>
<abstract><p>Returns the preferred mime-type for an UTI.
</p></abstract>
<returntype>NSString *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>preferredMIMEType</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/preferredNSPboardType" lang="occ" accessControl="private"><name>preferredNSPboardType</name>
<abstract><p>Returns the preferred NSPasteboardType for an UTI.
</p></abstract>
<returntype>NSString *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>preferredNSPboardType</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/preferredOSType" lang="occ" accessControl="private"><name>preferredOSType</name>
<abstract><p>Returns the preferred OSType for an UTI.
</p></abstract>
<attributelists><listattribute><name>See</name><list>
<item><name>OSTypeForString</name><value><hd_link logicalPath="OSTypeForString" isseealso="yes">OSTypeForString</hd_link></value></item></list></listattribute>
</attributelists>
<returntype>NSString *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>preferredOSType</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/referenceURL" lang="occ" accessControl="private"><name>referenceURL</name>
<abstract><p>Returns the URL of a reference document describing this type.
</p></abstract>
<returntype>NSURL *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSURL</declaration_type> <declaration_type>*</declaration_type> <declaration_var>referenceURL</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/tagSpecifications" lang="occ" accessControl="private"><name>tagSpecifications</name>
<abstract><p>Returns a dictionary containing conversions of the uniform type identifier to equivalent tags in other classification schemes.
</p></abstract>
<returntype>NSDictionary *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSDictionary</declaration_type> <declaration_type>*</declaration_type> <declaration_var>tagSpecifications</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/UTI/version" lang="occ" accessControl="private"><name>version</name>
<abstract><p>Returns a version string.
</p></abstract>
<returntype>NSString *</returntype>
<declaration>@property( <declaration_param>nonatomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>version</declaration_var>; </declaration>
<desc><p/></desc>
</property></properties>
<timestamp>Tuesday, June 16, 2015</timestamp>
</class></classes>
<copyrightinfo>&#169; (c) 2014 - Jean-David Gadina - www.xs-labs.com
</copyrightinfo>
<timestamp>Tuesday, June 16, 2015</timestamp>
</header>