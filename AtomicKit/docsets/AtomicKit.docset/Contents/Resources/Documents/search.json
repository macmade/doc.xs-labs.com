{"Protocols/DispatchedValueWrapper.html#/s:9AtomicKit22DispatchedValueWrapperPx0D4TypeQz5value_So13DispatchQueueC5queuetcfc":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value wrapper object.</p>","parent_name":"DispatchedValueWrapper"},"Protocols/ThreadSafeValueWrapper.html#/s:9AtomicKit22ThreadSafeValueWrapperPx0E4TypeQz5value_tcfc":{"name":"init(value:)","abstract":"<p>Required initializer.<br>","parent_name":"ThreadSafeValueWrapper"},"Protocols/ThreadSafeValueWrapper.html#/s:9AtomicKit22ThreadSafeValueWrapperP3get0E4TypeQzyF":{"name":"get()","abstract":"<p>Atomically gets the value of the wrapped type.</p>","parent_name":"ThreadSafeValueWrapper"},"Protocols/ThreadSafeValueWrapper.html#/s:9AtomicKit22ThreadSafeValueWrapperP3sety0E4TypeQzF":{"name":"set(_:)","abstract":"<p>Atomically sets the value of the wrapped type.</p>","parent_name":"ThreadSafeValueWrapper"},"Protocols/ThreadSafeValueWrapper.html#/s:9AtomicKit22ThreadSafeValueWrapperP7executeyy0E4TypeQzc7closure_tF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a custom closure, receiving the value of the wrapped","parent_name":"ThreadSafeValueWrapper"},"Protocols/ThreadSafeValueWrapper.html#/s:9AtomicKit22ThreadSafeValueWrapperP7executeqd__qd__0E4TypeQzc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a custom closure, receiving the value of the wrapped","parent_name":"ThreadSafeValueWrapper"},"Protocols/Lockable.html#/s:9AtomicKit8LockablePxyKcfc":{"name":"init()","abstract":"<p>Required initializer.</p>","parent_name":"Lockable"},"Protocols/Lockable.html#/s:9AtomicKit8LockableP7tryLockSbyF":{"name":"tryLock()","abstract":"<p>Tries to acquire the lock.</p>","parent_name":"Lockable"},"Protocols/Lockable.html":{"name":"Lockable","abstract":"<p>Protocol for <code>AtomicKit</code> lockable objects.<br>"},"Protocols/ThreadSafeValueWrapper.html":{"name":"ThreadSafeValueWrapper","abstract":"<p>Protocol for <code>AtomicKit</code> thread-safe wrapper objects around a value/type.</p>"},"Protocols/DispatchedValueWrapper.html":{"name":"DispatchedValueWrapper","abstract":"<p>Protocol for <code>AtomicKit</code> dispatched value wrappers.  </p>"},"Classes/Semaphore/Error.html#/s:9AtomicKit9SemaphoreC5ErrorO07InvalidC5CountA2EmF":{"name":"InvalidSemaphoreCount","abstract":"<p>Invalid semaphore count.<br>","parent_name":"Error"},"Classes/Semaphore/Error.html#/s:9AtomicKit9SemaphoreC5ErrorO07InvalidC4NameA2EmF":{"name":"InvalidSemaphoreName","abstract":"<p>Invalid semaphore name.<br>","parent_name":"Error"},"Classes/Semaphore/Error.html#/s:9AtomicKit9SemaphoreC5ErrorO012CannotCreateC0A2EmF":{"name":"CannotCreateSemaphore","abstract":"<p>Thrown when a failure occurs trying to initialize the native","parent_name":"Error"},"Classes/Semaphore.html#/s:9AtomicKit9SemaphoreC17nameMaximumLengthSivZ":{"name":"nameMaximumLength","abstract":"<p>The maximum length for a semaphore name.</p>","parent_name":"Semaphore"},"Classes/Semaphore.html#/s:9AtomicKit9SemaphoreC7isNamedSbv":{"name":"isNamed","abstract":"<p>Whether the semaphore is named.<br>","parent_name":"Semaphore"},"Classes/Semaphore.html#/s:9AtomicKit9SemaphoreC4nameSSSgv":{"name":"name","abstract":"<p>The name of the semaphore, if any.<br>","parent_name":"Semaphore"},"Classes/Semaphore/Error.html":{"name":"Error","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Semaphore.html\">Semaphore</a></code> errors.</p>","parent_name":"Semaphore"},"Classes/Semaphore.html#/s:9AtomicKit9SemaphoreCACs5Int32V5count_SSSg4nametKcfc":{"name":"init(count:name:)","abstract":"<p>Initializes a semaphore object.</p>","parent_name":"Semaphore"},"Classes/Semaphore.html#/s:9AtomicKit9SemaphoreC4waityyF":{"name":"wait()","abstract":"<p>Locks the semaphore.</p>","parent_name":"Semaphore"},"Classes/Semaphore.html#/s:9AtomicKit9SemaphoreC6signalyyF":{"name":"signal()","abstract":"<p>Signals (unlocks) the semaphore.</p>","parent_name":"Semaphore"},"Classes/Semaphore.html#/s:9AtomicKit9SemaphoreC7tryWaitSbyF":{"name":"tryWait()","abstract":"<p>Tries to lock the semaphore.</p>","parent_name":"Semaphore"},"Classes/DispatchedString.html#/s:9AtomicKit16DispatchedStringC9ValueTypea":{"name":"ValueType","abstract":"<p>The wrapped value type, <code>String</code>.</p>","parent_name":"DispatchedString"},"Classes/DispatchedString.html#/c:@M@AtomicKit@objc(cs)DispatchedString(im)initWithValue:":{"name":"init(value:)","abstract":"<p>Initializes a dispatched value object.<br>","parent_name":"DispatchedString"},"Classes/DispatchedString.html#/c:@M@AtomicKit@objc(cs)DispatchedString(im)initWithValue:queue:":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value object.  </p>","parent_name":"DispatchedString"},"Classes/DispatchedString.html#/c:@M@AtomicKit@objc(cs)DispatchedString(py)value":{"name":"value","abstract":"<p>The wrapped <code>String</code> value.<br>","parent_name":"DispatchedString"},"Classes/DispatchedString.html#/c:@M@AtomicKit@objc(cs)DispatchedString(im)get":{"name":"get()","abstract":"<p>Atomically gets the wrapped <code>String</code> value.<br>","parent_name":"DispatchedString"},"Classes/DispatchedString.html#/c:@M@AtomicKit@objc(cs)DispatchedString(im)set:":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped <code>String</code> value.<br>","parent_name":"DispatchedString"},"Classes/DispatchedString.html#/c:@M@AtomicKit@objc(cs)DispatchedString(im)executeWithClosure:":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>String</code> value.<br>","parent_name":"DispatchedString"},"Classes/DispatchedString.html#/s:9AtomicKit16DispatchedStringC7executexxSSSgc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>String</code> value,","parent_name":"DispatchedString"},"Classes/LockingValue.html#/s:9AtomicKit12LockingValueC0D4Typea":{"name":"ValueType","abstract":"<p>The wrapped value type.</p>","parent_name":"LockingValue"},"Classes/LockingValue.html#/s:9AtomicKit12LockingValueCACyxq_Gx5value_So9NSLocking_p4locktcfc":{"name":"init(value:lock:)","abstract":"<p>Initializes a locking value object.</p>","parent_name":"LockingValue"},"Classes/LockingValue.html#/s:9AtomicKit12LockingValueCACyxq_Gx5value_tcfc":{"name":"init(value:)","abstract":"<p>Initializes a locking value object.</p>","parent_name":"LockingValue"},"Classes/LockingValue.html#/s:9AtomicKit12LockingValueC3getxyF":{"name":"get()","abstract":"<p>Atomically gets the wrapped value.</p>","parent_name":"LockingValue"},"Classes/LockingValue.html#/s:9AtomicKit12LockingValueC3setyxF":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped value.</p>","parent_name":"LockingValue"},"Classes/LockingValue.html#/s:9AtomicKit12LockingValueC7executeyyxc7closure_tF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped value.<br>","parent_name":"LockingValue"},"Classes/LockingValue.html#/s:9AtomicKit12LockingValueC7executeqd__qd__xc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped value, returning some value.<br>","parent_name":"LockingValue"},"Classes/RWLock/Intent.html#/s:9AtomicKit6RWLockC6IntentO7readingA2EmF":{"name":"reading","abstract":"<p>Intent for reading operations.</p>","parent_name":"Intent"},"Classes/RWLock/Intent.html#/s:9AtomicKit6RWLockC6IntentO7writingA2EmF":{"name":"writing","abstract":"<p>Intent for writing operations.</p>","parent_name":"Intent"},"Classes/RWLock/Error.html#/s:9AtomicKit6RWLockC5ErrorO17CannotCreateMutexA2EmF":{"name":"CannotCreateMutex","abstract":"<p>Thrown on initialization failures.</p>","parent_name":"Error"},"Classes/RWLock/Error.html":{"name":"Error","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/RWLock.html\">RWLock</a></code> errors.</p>","parent_name":"RWLock"},"Classes/RWLock/Intent.html":{"name":"Intent","abstract":"<p>Locing intent.</p>","parent_name":"RWLock"},"Classes/RWLock.html#/s:9AtomicKit6RWLockCACyKcfc":{"name":"init()","abstract":"<p>Initializer.</p>","parent_name":"RWLock"},"Classes/RWLock.html#/s:9AtomicKit6RWLockC4lockyAC6IntentO3for_tF":{"name":"lock(for:)","abstract":"<p>Acquires the lock.</p>","parent_name":"RWLock"},"Classes/RWLock.html#/s:9AtomicKit6RWLockC6unlockyAC6IntentO3for_tF":{"name":"unlock(for:)","abstract":"<p>Releases the lock.</p>","parent_name":"RWLock"},"Classes/RWLock.html#/s:9AtomicKit6RWLockC7tryLockSbAC6IntentO3for_tF":{"name":"tryLock(for:)","abstract":"<p>Tries to acquires the lock.</p>","parent_name":"RWLock"},"Classes/DispatchedMutableDictionary.html#/s:9AtomicKit27DispatchedMutableDictionaryC9ValueTypea":{"name":"ValueType","abstract":"<p>The wrapped value type, <code>NSMutableDictionary</code>.</p>","parent_name":"DispatchedMutableDictionary"},"Classes/DispatchedMutableDictionary.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableDictionary(im)initWithValue:":{"name":"init(value:)","abstract":"<p>Initializes a dispatched value object.<br>","parent_name":"DispatchedMutableDictionary"},"Classes/DispatchedMutableDictionary.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableDictionary(im)initWithValue:queue:":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value object.  </p>","parent_name":"DispatchedMutableDictionary"},"Classes/DispatchedMutableDictionary.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableDictionary(py)value":{"name":"value","abstract":"<p>The wrapped <code>NSMutableDictionary</code> value.<br>","parent_name":"DispatchedMutableDictionary"},"Classes/DispatchedMutableDictionary.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableDictionary(im)get":{"name":"get()","abstract":"<p>Atomically gets the wrapped <code>NSMutableDictionary</code> value.<br>","parent_name":"DispatchedMutableDictionary"},"Classes/DispatchedMutableDictionary.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableDictionary(im)set:":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped <code>NSMutableDictionary</code> value.<br>","parent_name":"DispatchedMutableDictionary"},"Classes/DispatchedMutableDictionary.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableDictionary(im)executeWithClosure:":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSMutableDictionary</code> value.<br>","parent_name":"DispatchedMutableDictionary"},"Classes/DispatchedMutableDictionary.html#/s:9AtomicKit27DispatchedMutableDictionaryC7executexxSo09NSMutableE0CSgc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSMutableDictionary</code> value,","parent_name":"DispatchedMutableDictionary"},"Classes/Mutex/Error.html#/s:9AtomicKit5MutexC5ErrorO012CannotCreateC0A2EmF":{"name":"CannotCreateMutex","abstract":"<p>Thrown when a failure occurs trying to initialize the native","parent_name":"Error"},"Classes/Mutex/Error.html#/s:9AtomicKit5MutexC5ErrorO012CannotCreateC10AttributesA2EmF":{"name":"CannotCreateMutexAttributes","abstract":"<p>Thrown when a failure occurs trying to initialize the native","parent_name":"Error"},"Classes/Mutex/Error.html":{"name":"Error","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Mutex.html\">Mutex</a></code> errors.</p>","parent_name":"Mutex"},"Classes/Mutex.html#/s:9AtomicKit5MutexCACyKcfc":{"name":"init()","abstract":"<p>Initializes a mutex object.</p>","parent_name":"Mutex"},"Classes/Mutex.html#/s:9AtomicKit5MutexC4lockyyF":{"name":"lock()","abstract":"<p>Locks the mutex.</p>","parent_name":"Mutex"},"Classes/Mutex.html#/s:9AtomicKit5MutexC6unlockyyF":{"name":"unlock()","abstract":"<p>Unlocks the mutex.</p>","parent_name":"Mutex"},"Classes/Mutex.html#/s:9AtomicKit5MutexC7tryLockSbyF":{"name":"tryLock()","abstract":"<p>Tries to lock the mutex.</p>","parent_name":"Mutex"},"Classes/DispatchedObject.html#/s:9AtomicKit16DispatchedObjectC9ValueTypea":{"name":"ValueType","abstract":"<p>The wrapped value type, <code>NSObject</code>.</p>","parent_name":"DispatchedObject"},"Classes/DispatchedObject.html#/c:@M@AtomicKit@objc(cs)DispatchedObject(im)initWithValue:":{"name":"init(value:)","abstract":"<p>Initializes a dispatched value object.<br>","parent_name":"DispatchedObject"},"Classes/DispatchedObject.html#/c:@M@AtomicKit@objc(cs)DispatchedObject(im)initWithValue:queue:":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value object.  </p>","parent_name":"DispatchedObject"},"Classes/DispatchedObject.html#/c:@M@AtomicKit@objc(cs)DispatchedObject(py)value":{"name":"value","abstract":"<p>The wrapped <code>NSObject</code> value.<br>","parent_name":"DispatchedObject"},"Classes/DispatchedObject.html#/c:@M@AtomicKit@objc(cs)DispatchedObject(im)get":{"name":"get()","abstract":"<p>Atomically gets the wrapped <code>NSObject</code> value.<br>","parent_name":"DispatchedObject"},"Classes/DispatchedObject.html#/c:@M@AtomicKit@objc(cs)DispatchedObject(im)set:":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped <code>NSObject</code> value.<br>","parent_name":"DispatchedObject"},"Classes/DispatchedObject.html#/c:@M@AtomicKit@objc(cs)DispatchedObject(im)executeWithClosure:":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSObject</code> value.<br>","parent_name":"DispatchedObject"},"Classes/DispatchedObject.html#/s:9AtomicKit16DispatchedObjectC7executexxSo8NSObjectCSgc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSObject</code> value,","parent_name":"DispatchedObject"},"Classes/DispatchedValue.html#/s:9AtomicKit15DispatchedValueC0D4Typea":{"name":"ValueType","abstract":"<p>The wrapped value type.</p>","parent_name":"DispatchedValue"},"Classes/DispatchedValue.html#/s:9AtomicKit15DispatchedValueCACyxGx5value_tcfc":{"name":"init(value:)","abstract":"<p>Initializes a dispatched value object.<br>","parent_name":"DispatchedValue"},"Classes/DispatchedValue.html#/s:9AtomicKit15DispatchedValueCACyxGx5value_So13DispatchQueueC5queuetcfc":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value object.  </p>","parent_name":"DispatchedValue"},"Classes/DispatchedValue.html#/s:9AtomicKit15DispatchedValueC3getxyF":{"name":"get()","abstract":"<p>Atomically gets the wrapped value.<br>","parent_name":"DispatchedValue"},"Classes/DispatchedValue.html#/s:9AtomicKit15DispatchedValueC3setyxF":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped value.<br>","parent_name":"DispatchedValue"},"Classes/DispatchedValue.html#/s:9AtomicKit15DispatchedValueC7executeyyxc7closure_tF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped value.<br>","parent_name":"DispatchedValue"},"Classes/DispatchedValue.html#/s:9AtomicKit15DispatchedValueC7executeqd__qd__xc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped value, returning some value.<br>","parent_name":"DispatchedValue"},"Classes/DispatchedBool.html#/s:9AtomicKit14DispatchedBoolC9ValueTypea":{"name":"ValueType","abstract":"<p>The wrapped value type, <code>Bool</code>.</p>","parent_name":"DispatchedBool"},"Classes/DispatchedBool.html#/c:@M@AtomicKit@objc(cs)DispatchedBool(im)initWithValue:":{"name":"init(value:)","abstract":"<p>Initializes a dispatched value object.<br>","parent_name":"DispatchedBool"},"Classes/DispatchedBool.html#/c:@M@AtomicKit@objc(cs)DispatchedBool(im)initWithValue:queue:":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value object.  </p>","parent_name":"DispatchedBool"},"Classes/DispatchedBool.html#/c:@M@AtomicKit@objc(cs)DispatchedBool(py)value":{"name":"value","abstract":"<p>The wrapped <code>Bool</code> value.<br>","parent_name":"DispatchedBool"},"Classes/DispatchedBool.html#/c:@M@AtomicKit@objc(cs)DispatchedBool(im)get":{"name":"get()","abstract":"<p>Atomically gets the wrapped <code>Bool</code> value.<br>","parent_name":"DispatchedBool"},"Classes/DispatchedBool.html#/c:@M@AtomicKit@objc(cs)DispatchedBool(im)set:":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped <code>Bool</code> value.<br>","parent_name":"DispatchedBool"},"Classes/DispatchedBool.html#/c:@M@AtomicKit@objc(cs)DispatchedBool(im)executeWithClosure:":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>Bool</code> value.<br>","parent_name":"DispatchedBool"},"Classes/DispatchedBool.html#/s:9AtomicKit14DispatchedBoolC7executexxSbc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>Bool</code> value, returning some","parent_name":"DispatchedBool"},"Classes/DispatchedDictionaryController.html#/s:9AtomicKit30DispatchedDictionaryControllerC9ValueTypea":{"name":"ValueType","abstract":"<p>The wrapped value type, <code>NSDictionaryController</code>.</p>","parent_name":"DispatchedDictionaryController"},"Classes/DispatchedDictionaryController.html#/c:@M@AtomicKit@objc(cs)DispatchedDictionaryController(im)initWithValue:":{"name":"init(value:)","abstract":"<p>Initializes a dispatched value object.<br>","parent_name":"DispatchedDictionaryController"},"Classes/DispatchedDictionaryController.html#/c:@M@AtomicKit@objc(cs)DispatchedDictionaryController(im)initWithValue:queue:":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value object.  </p>","parent_name":"DispatchedDictionaryController"},"Classes/DispatchedDictionaryController.html#/c:@M@AtomicKit@objc(cs)DispatchedDictionaryController(py)value":{"name":"value","abstract":"<p>The wrapped <code>NSDictionaryController</code> value.<br>","parent_name":"DispatchedDictionaryController"},"Classes/DispatchedDictionaryController.html#/c:@M@AtomicKit@objc(cs)DispatchedDictionaryController(im)get":{"name":"get()","abstract":"<p>Atomically gets the wrapped <code>NSDictionaryController</code> value.<br>","parent_name":"DispatchedDictionaryController"},"Classes/DispatchedDictionaryController.html#/c:@M@AtomicKit@objc(cs)DispatchedDictionaryController(im)set:":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped <code>NSDictionaryController</code> value.<br>","parent_name":"DispatchedDictionaryController"},"Classes/DispatchedDictionaryController.html#/c:@M@AtomicKit@objc(cs)DispatchedDictionaryController(im)executeWithClosure:":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSDictionaryController</code>","parent_name":"DispatchedDictionaryController"},"Classes/DispatchedDictionaryController.html#/s:9AtomicKit30DispatchedDictionaryControllerC7executexxSo012NSDictionaryE0CSgc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSDictionaryController</code>","parent_name":"DispatchedDictionaryController"},"Classes/DispatchedArrayController.html#/s:9AtomicKit25DispatchedArrayControllerC9ValueTypea":{"name":"ValueType","abstract":"<p>The wrapped value type, <code>NSArrayController</code>.</p>","parent_name":"DispatchedArrayController"},"Classes/DispatchedArrayController.html#/c:@M@AtomicKit@objc(cs)DispatchedArrayController(im)initWithValue:":{"name":"init(value:)","abstract":"<p>Initializes a dispatched value object.<br>","parent_name":"DispatchedArrayController"},"Classes/DispatchedArrayController.html#/c:@M@AtomicKit@objc(cs)DispatchedArrayController(im)initWithValue:queue:":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value object.  </p>","parent_name":"DispatchedArrayController"},"Classes/DispatchedArrayController.html#/c:@M@AtomicKit@objc(cs)DispatchedArrayController(py)value":{"name":"value","abstract":"<p>The wrapped <code>NSArrayController</code> value.<br>","parent_name":"DispatchedArrayController"},"Classes/DispatchedArrayController.html#/c:@M@AtomicKit@objc(cs)DispatchedArrayController(im)get":{"name":"get()","abstract":"<p>Atomically gets the wrapped <code>NSArrayController</code> value.<br>","parent_name":"DispatchedArrayController"},"Classes/DispatchedArrayController.html#/c:@M@AtomicKit@objc(cs)DispatchedArrayController(im)set:":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped <code>NSArrayController</code> value.<br>","parent_name":"DispatchedArrayController"},"Classes/DispatchedArrayController.html#/c:@M@AtomicKit@objc(cs)DispatchedArrayController(im)executeWithClosure:":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSArrayController</code> value.<br>","parent_name":"DispatchedArrayController"},"Classes/DispatchedArrayController.html#/s:9AtomicKit25DispatchedArrayControllerC7executexxSo07NSArrayE0CSgc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSArrayController</code> value,","parent_name":"DispatchedArrayController"},"Classes/DispatchedMutableArray.html#/s:9AtomicKit22DispatchedMutableArrayC9ValueTypea":{"name":"ValueType","abstract":"<p>The wrapped value type, <code>NSMutableArray</code>.</p>","parent_name":"DispatchedMutableArray"},"Classes/DispatchedMutableArray.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableArray(im)initWithValue:":{"name":"init(value:)","abstract":"<p>Initializes a dispatched value object.<br>","parent_name":"DispatchedMutableArray"},"Classes/DispatchedMutableArray.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableArray(im)initWithValue:queue:":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value object.  </p>","parent_name":"DispatchedMutableArray"},"Classes/DispatchedMutableArray.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableArray(py)value":{"name":"value","abstract":"<p>The wrapped <code>NSMutableArray</code> value.<br>","parent_name":"DispatchedMutableArray"},"Classes/DispatchedMutableArray.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableArray(im)get":{"name":"get()","abstract":"<p>Atomically gets the wrapped <code>NSMutableArray</code> value.<br>","parent_name":"DispatchedMutableArray"},"Classes/DispatchedMutableArray.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableArray(im)set:":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped <code>NSMutableArray</code> value.<br>","parent_name":"DispatchedMutableArray"},"Classes/DispatchedMutableArray.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableArray(im)executeWithClosure:":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSMutableArray</code> value.<br>","parent_name":"DispatchedMutableArray"},"Classes/DispatchedMutableArray.html#/s:9AtomicKit22DispatchedMutableArrayC7executexxSo09NSMutableE0CSgc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSMutableArray</code> value,","parent_name":"DispatchedMutableArray"},"Classes/DispatchedTreeController.html#/s:9AtomicKit24DispatchedTreeControllerC9ValueTypea":{"name":"ValueType","abstract":"<p>The wrapped value type, <code>NSTreeController</code>.</p>","parent_name":"DispatchedTreeController"},"Classes/DispatchedTreeController.html#/c:@M@AtomicKit@objc(cs)DispatchedTreeController(im)initWithValue:":{"name":"init(value:)","abstract":"<p>Initializes a dispatched value object.<br>","parent_name":"DispatchedTreeController"},"Classes/DispatchedTreeController.html#/c:@M@AtomicKit@objc(cs)DispatchedTreeController(im)initWithValue:queue:":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value object.  </p>","parent_name":"DispatchedTreeController"},"Classes/DispatchedTreeController.html#/c:@M@AtomicKit@objc(cs)DispatchedTreeController(py)value":{"name":"value","abstract":"<p>The wrapped <code>NSTreeController</code> value.<br>","parent_name":"DispatchedTreeController"},"Classes/DispatchedTreeController.html#/c:@M@AtomicKit@objc(cs)DispatchedTreeController(im)get":{"name":"get()","abstract":"<p>Atomically gets the wrapped <code>NSTreeController</code> value.<br>","parent_name":"DispatchedTreeController"},"Classes/DispatchedTreeController.html#/c:@M@AtomicKit@objc(cs)DispatchedTreeController(im)set:":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped <code>NSTreeController</code> value.<br>","parent_name":"DispatchedTreeController"},"Classes/DispatchedTreeController.html#/c:@M@AtomicKit@objc(cs)DispatchedTreeController(im)executeWithClosure:":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSTreeController</code> value.<br>","parent_name":"DispatchedTreeController"},"Classes/DispatchedTreeController.html#/s:9AtomicKit24DispatchedTreeControllerC7executexxSo06NSTreeE0CSgc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSTreeController</code> value,","parent_name":"DispatchedTreeController"},"Classes/DispatchedNumber.html#/s:9AtomicKit16DispatchedNumberC9ValueTypea":{"name":"ValueType","abstract":"<p>The wrapped value type, <code>NSNumber</code>.</p>","parent_name":"DispatchedNumber"},"Classes/DispatchedNumber.html#/c:@M@AtomicKit@objc(cs)DispatchedNumber(im)initWithValue:":{"name":"init(value:)","abstract":"<p>Initializes a dispatched value object.<br>","parent_name":"DispatchedNumber"},"Classes/DispatchedNumber.html#/c:@M@AtomicKit@objc(cs)DispatchedNumber(im)initWithValue:queue:":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value object.  </p>","parent_name":"DispatchedNumber"},"Classes/DispatchedNumber.html#/c:@M@AtomicKit@objc(cs)DispatchedNumber(py)value":{"name":"value","abstract":"<p>The wrapped <code>NSNumber</code> value.<br>","parent_name":"DispatchedNumber"},"Classes/DispatchedNumber.html#/c:@M@AtomicKit@objc(cs)DispatchedNumber(im)get":{"name":"get()","abstract":"<p>Atomically gets the wrapped <code>NSNumber</code> value.<br>","parent_name":"DispatchedNumber"},"Classes/DispatchedNumber.html#/c:@M@AtomicKit@objc(cs)DispatchedNumber(im)set:":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped <code>NSNumber</code> value.<br>","parent_name":"DispatchedNumber"},"Classes/DispatchedNumber.html#/c:@M@AtomicKit@objc(cs)DispatchedNumber(im)executeWithClosure:":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSNumber</code> value.<br>","parent_name":"DispatchedNumber"},"Classes/DispatchedNumber.html#/s:9AtomicKit16DispatchedNumberC7executexxSo8NSNumberCSgc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSNumber</code> value,","parent_name":"DispatchedNumber"},"Classes/RecursiveMutex/Error.html#/s:9AtomicKit14RecursiveMutexC5ErrorO012CannotCreateD0A2EmF":{"name":"CannotCreateMutex","abstract":"<p>Thrown when a failure occurs trying to initialize the native","parent_name":"Error"},"Classes/RecursiveMutex/Error.html#/s:9AtomicKit14RecursiveMutexC5ErrorO012CannotCreateD10AttributesA2EmF":{"name":"CannotCreateMutexAttributes","abstract":"<p>Thrown when a failure occurs trying to initialize the native","parent_name":"Error"},"Classes/RecursiveMutex/Error.html":{"name":"Error","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/RecursiveMutex.html\">RecursiveMutex</a></code> errors.</p>","parent_name":"RecursiveMutex"},"Classes/RecursiveMutex.html#/s:9AtomicKit14RecursiveMutexCACyKcfc":{"name":"init()","abstract":"<p>Initializes a recursive mutex object.</p>","parent_name":"RecursiveMutex"},"Classes/RecursiveMutex.html#/s:9AtomicKit14RecursiveMutexC4lockyyF":{"name":"lock()","abstract":"<p>Locks the recursive mutex.</p>","parent_name":"RecursiveMutex"},"Classes/RecursiveMutex.html#/s:9AtomicKit14RecursiveMutexC6unlockyyF":{"name":"unlock()","abstract":"<p>Unlocks the recursive mutex.</p>","parent_name":"RecursiveMutex"},"Classes/RecursiveMutex.html#/s:9AtomicKit14RecursiveMutexC7tryLockSbyF":{"name":"tryLock()","abstract":"<p>Tries to lock the recursive mutex.</p>","parent_name":"RecursiveMutex"},"Classes/DispatchedMutableSet.html#/s:9AtomicKit20DispatchedMutableSetC9ValueTypea":{"name":"ValueType","abstract":"<p>The wrapped value type, <code>NSMutableSet</code>.</p>","parent_name":"DispatchedMutableSet"},"Classes/DispatchedMutableSet.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableSet(im)initWithValue:":{"name":"init(value:)","abstract":"<p>Initializes a dispatched value object.<br>","parent_name":"DispatchedMutableSet"},"Classes/DispatchedMutableSet.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableSet(im)initWithValue:queue:":{"name":"init(value:queue:)","abstract":"<p>Initializes a dispatched value object.  </p>","parent_name":"DispatchedMutableSet"},"Classes/DispatchedMutableSet.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableSet(py)value":{"name":"value","abstract":"<p>The wrapped <code>NSMutableSet</code> value.<br>","parent_name":"DispatchedMutableSet"},"Classes/DispatchedMutableSet.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableSet(im)get":{"name":"get()","abstract":"<p>Atomically gets the wrapped <code>NSMutableSet</code> value.<br>","parent_name":"DispatchedMutableSet"},"Classes/DispatchedMutableSet.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableSet(im)set:":{"name":"set(_:)","abstract":"<p>Atomically sets the wrapped <code>NSMutableSet</code> value.<br>","parent_name":"DispatchedMutableSet"},"Classes/DispatchedMutableSet.html#/c:@M@AtomicKit@objc(cs)DispatchedMutableSet(im)executeWithClosure:":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSMutableSet</code> value.<br>","parent_name":"DispatchedMutableSet"},"Classes/DispatchedMutableSet.html#/s:9AtomicKit20DispatchedMutableSetC7executexxSo09NSMutableE0CSgc7closure_tlF":{"name":"execute(closure:)","abstract":"<p>Atomically executes a closure on the wrapped <code>NSMutableSet</code> value,","parent_name":"DispatchedMutableSet"},"Classes/UnfairLock.html#/s:9AtomicKit10UnfairLockCACycfc":{"name":"init()","abstract":"<p>Designated initializer.","parent_name":"UnfairLock"},"Classes/UnfairLock.html#/s:9AtomicKit10UnfairLockC4lockyyF":{"name":"lock()","abstract":"<p>Locks an unfair lock.</p>","parent_name":"UnfairLock"},"Classes/UnfairLock.html#/s:9AtomicKit10UnfairLockC6unlockyyF":{"name":"unlock()","abstract":"<p>Unlocks an unfair lock.</p>","parent_name":"UnfairLock"},"Classes/UnfairLock.html#/s:9AtomicKit10UnfairLockC03tryD0SbyF":{"name":"tryLock()","abstract":"<p>Tries to lock an unfair lock if it is not already locked.</p>","parent_name":"UnfairLock"},"Classes/UnfairLock.html":{"name":"UnfairLock","abstract":"<p>Swift wrapper class for <code>os_unfair_lock_t</code>.<br>"},"Classes/DispatchedMutableSet.html":{"name":"DispatchedMutableSet","abstract":"<p>Thread-safe value wrapper for <code>NSMutableSet</code>, using dispatch queues to"},"Classes/RecursiveMutex.html":{"name":"RecursiveMutex","abstract":"<p>Swift wrapper class for <code>pthread_mutex_t</code>.<br>"},"Classes/DispatchedNumber.html":{"name":"DispatchedNumber","abstract":"<p>Thread-safe value wrapper for <code>NSNumber</code>, using dispatch queues to"},"Classes/DispatchedTreeController.html":{"name":"DispatchedTreeController","abstract":"<p>Thread-safe value wrapper for <code>NSTreeController</code>, using dispatch queues to"},"Classes/DispatchedMutableArray.html":{"name":"DispatchedMutableArray","abstract":"<p>Thread-safe value wrapper for <code>NSMutableArray</code>, using dispatch queues to"},"Classes/DispatchedArrayController.html":{"name":"DispatchedArrayController","abstract":"<p>Thread-safe value wrapper for <code>NSArrayController</code>, using dispatch queues to"},"Classes/DispatchedDictionaryController.html":{"name":"DispatchedDictionaryController","abstract":"<p>Thread-safe value wrapper for <code>NSDictionaryController</code>, using dispatch queues"},"Classes/DispatchedBool.html":{"name":"DispatchedBool","abstract":"<p>Thread-safe value wrapper for <code>Bool</code>, using dispatch queues to achieve"},"Classes/DispatchedValue.html":{"name":"DispatchedValue","abstract":"<p>Thread-safe value wrapper, using dispatch queues to achieve synchronization.<br>"},"Classes/DispatchedObject.html":{"name":"DispatchedObject","abstract":"<p>Thread-safe value wrapper for <code>NSObject</code>, using dispatch queues to"},"Classes/Mutex.html":{"name":"Mutex","abstract":"<p>Swift wrapper class for <code>pthread_mutex_t</code>.<br>"},"Classes/DispatchedMutableDictionary.html":{"name":"DispatchedMutableDictionary","abstract":"<p>Thread-safe value wrapper for <code>NSMutableDictionary</code>, using dispatch queues to"},"Classes/RWLock.html":{"name":"RWLock","abstract":"<p>Represents a reader-writer lock.<br>"},"Classes/LockingValue.html":{"name":"LockingValue","abstract":"<p>Represents a thread-safe value wrapper, using locking to achieve"},"Classes/DispatchedString.html":{"name":"DispatchedString","abstract":"<p>Thread-safe value wrapper for <code>String</code>, using dispatch queues to"},"Classes/Semaphore.html":{"name":"Semaphore","abstract":"<p>Represents a semaphore object.<br>"},"Classes.html#/s:9AtomicKit0A0C":{"name":"Atomic","abstract":"<p>Represents a thread-safe value wrapper, using an unfair lock to achieve"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}